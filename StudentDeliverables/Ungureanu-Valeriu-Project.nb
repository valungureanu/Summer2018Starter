(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    405300,       9504]
NotebookOptionsPosition[    386990,       9209]
NotebookOutlinePosition[    392369,       9335]
CellTagsIndexPosition[    392154,       9326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Wednesday, July 11, 2018 at 10:05", \
"TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"493d3bc0-cd44-49ab-b797-dcb9ccb49ecc"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188040860998*^9},
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Valeriu Ungureanu", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536207540806*^9, {3.74023052126919*^9, 
   3.740230533327911*^9}},ExpressionUUID->"2214bf82-cb91-41b2-a79f-\
ecd872282532"],

Cell["Carl Woll", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536216260921*^9, {3.740230538144199*^9, 
   3.740230541882003*^9}},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-\
49b5afc9692c"],

Cell["Moldova State University", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536278299572*^9, {3.7402305466340637`*^9, 
   3.7402305554166255`*^9}},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-\
7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.7361879449416428`*^9},
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["A Game Theory Package for the Wolfram Language", \
"TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{
  3.7365364091022453`*^9, {3.7402244282744827`*^9, 3.7402244355609493`*^9}, 
   3.740230580960919*^9},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell[TextData[{
 "Theory of Games has an impressive development during the last 70 years both \
as a domain of applied mathematics and a part of various important domains of \
human activity. It\[CloseCurlyQuote]s somewhat strange that Mathematica doesn\
\[CloseCurlyQuote]t include any functionality related to game theory. In this \
project we intend to initiate a game theory Wolfram Language package. Its \
theoretical foundations are exposed in our recent monograph  \
\[OpenCurlyDoubleQuote]",
 StyleBox["Pareto-Nash-Stackelberg Game and Control Theory",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote], Springer International Publishing, 2018."
}], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536691820487*^9, {3.740155118117497*^9, 3.7401551204584227`*^9}, {
   3.7402306137941127`*^9, 3.7402306171482983`*^9}, {3.740230669946948*^9, 
   3.740230669946948*^9}, {3.7402330184108315`*^9, 3.740233019800229*^9}, {
   3.740243749868186*^9, 3.7402438824170685`*^9}, {3.7402447529724436`*^9, 
   3.740244952747507*^9}, {3.7402450070255537`*^9, 3.7402450672439117`*^9}, {
   3.7402451273622117`*^9, 3.7402451402464085`*^9}, {3.7402453983232546`*^9, 
   3.7402454012171087`*^9}, {3.740251011234099*^9, 
   3.74025108684261*^9}},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.736704649824739*^9},ExpressionUUID->"ec924e65-f9fc-4678-8fe3-\
95cd292f053c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd8G9eZL+rESd7em5u3e3f37eZubupuEqdsvLZTnN3Npq+dOO5J3Its
yeqVElXYq9h77x0EAbAAIECwS+ykqMYCojf2XtEGM/O+c84AhIptkVIcWdH3
OxwOBoMpZ875z/985ytffefwC+998oEHHvD5K1i8sOPkz48d23H6xb+BD384
5LN396FdO39z6Piu3buOPf7Og7AxDf4sn3jgAbTutDtYhoXCuGhuybIuEIaG
zbAJbWVpinK4KAfa4CU0jT4yDONZeraQj3AYdutCfutZ2d5BbkFoXChSGE5Y
r8J4ruT9f35juWfF+3F7Pm71GKzTCa2JdThYFwUtCw4Ch6No9Iw3HHani8JH
px0OG0M7PE8HtjgdNlLDH3xe5obyAQInteOjw/NnXU7WtcGyTk+jh+0OvA/L
2Fl6nWWcLEPd5ATuQlMu9ylpGo52e+3hunq+6cc/Wdf4KIUmD4lUoYt1QmHg
KTDu+kNfbNbk+1f/n6d4XxUHpJvrNGow8Lw8SOO6vkXCc4QHekvPkWG7OjrH
zZbR4RG9VgfFbDYbjUaDyTimVmn1Oigajcpkgg16rUal0+m0Wi0sDQaDWq3W
aDR6vV6HxYCFbIGvYGmxWPRbFHJMOAUcyoyFHH+rx3k/0W2KRqdXeYper712
R+21RY/295Ibdtjc854UeCgmaAQGA7SNy5cvOwFvtyGMC9otY12HJWWzupwU
tFICznYX5cTcAHVQ4AWIFVAO+zosrRsruDu77HYr3v7BzXkLQE3Q2IXhn4UX
AYNfDRgvGNyrKHIEAGrGymHF+/VYmtlckp4JN3t7QO0BZ1Lb19GGewKlWQ6o
OayGiqcwUFPXALX7lUfu/+5Z3lS4FsEwHM/1tIEbWiR5xDT9IdyDE5oBlOYa
GGbUDocD/Ry/D6Dq7E7EZJxOOyEJntYCu7H4/e5h1Nd1XtgC/e3DL+CmN4uv
n72hcd4h8ebSTlwAK5xexYGLDYqH0bmXfyn8+TpBYyz8LOC5T01Nsdt7NIBd
LtdXPv8P3//e96BT/q//+VkWt1wH5Xz6+eegcwJo5+bnYTSmXRSqfL1O9T/+
6lOUezRHWvUHvia29lzwEJLm2Ds0OoedXJKbVrOYRVvRpWGC/X73fC3jxcfc
LlB7uq13DbuweNav2/NjL5tcFJAIOiO9CWsYqPF2r8q/G2DauylwbxNolnYG
SAfrpNH7HzUdPC6D5gVQCO+gzefFeMkt1ZCL1qo1sCSqDyA55IcwGoV/TpcD
CjAcaHUMLGnKcwrSXzzvem8OT2NKRNaZLQoc0FuX4oH6rR7n/QQuDRXGcU2h
vUHYA+DQZ+3k22sLTV5Pf2nS2dk5ODgIz2JychI+eqD7FgXtzLiojY2H/vkr
JXl5bU2N//uv/wYO8k//9wsPfvpTTz37zPnurnJeRfv5c52d5z/zmU/RLrvT
sfG5//VXatXI7373WzjhrdH4rQA1Nz5Fmj14WQCyUg7c7BmkkUEXDBQPOhli
1OhVYSeakA+4QTdQu1H6doH0uhqG7kDAmXSue4BUI2BhuLv0ADWuQI6NMog0
Io7twljt2e9uKZuXtAnUiOwhSEVX7ETjNMrOOjFQU5u/8Nz2LQsM5Ak9xpXm
IvwZURqX04VZNCxxvyRqN8SpSJch7QQ+Qvth3Iwalna7nVyD1WrdxrPz5tIE
qLd6Rx98eC9u7BbSIz0FCbyVCIDf/Mn8pQk8gtbW1vb29rW1NZPJtL0jIEZN
OWn7BtJUQ/3aEH1FDABGa4gEMEQNAi0IUWgGj3QA2wnBRo0Qt0IvbuAWl6ds
ebzDoDbmwn3MhQsMpTacNB654gumnahgjvIBjJq9BjZp0lkww9lak/HQG2/G
YsNCdnB31XujJdJkDEv4J358njkjbguNvnUQmuq6+aj2z1m4VkeaDs01Rdaz
BSmlXXiMQBElzzbwmQj8CoCaqzWaslrXyQXY7VbS7L0gmoZvPUMwAqGkOXmG
YKQTUVi2d0nQDmdmZhYWFubm5shyaWlp7s7J7Oy0VyEyPzuzODe77C5LqMwt
zM/Ozc/DYsGrLMGSfHttuffFYrHAkjxuqDJ4F3u0Xrfe0jD00Qj3KCdqzAw3
bU30uavWDTgc0GjS8Cin1UXZuNEcdFia8h7pvy9QX4PVHy7ojtzDpyWanaHY
VbgSilwtuUgn64K3BnqDUB8I1J4G7+k4brq4hY7gocqker2Vh56v7gEi7RYa
o/QmUJMnSFAaFw6ooWD19V0H1DQmz26gdrcBMiygNtGboDQH7Tc0hltpHrCP
0WiEQzsoe99AL6zYHFYX0qzQGxtr7j5Cy2QyrLLeVIt1dHQ0Nzez7i3QolZX
oY2jlq9QKGDFwwG2KoAD1ym3t63rvlG8uDHtftNxb3BSx9eX+4zaLfAUFhcX
oY7MZvNWf7vZgBnaZbchguq0A6MmrZYQaaR84GqYdiulOXU0vL5JM0NLbj7F
5SnXA/X1vPp9QRtDNDLmsLuoDZbV0uwIwxppdgn1JwdLrxOIgD6BtB8cStz8
7sgKXB4eRXozLmarWO3BZ8/wAboSUXp4zyreGwpqAtGcDprUGX56Hqij3SzU
q9veLcVFxlqIcBDNOsM1P3L17v8US97ftwUfUAFarRaQ+R//zz/84Eff/9u/
/99vvv3G//nC53/6059A+Yd/+Huoqr/7u78LDA7Kzc97+tlnvve977388ssP
PfTQyZMnk5KSwsLCvvzlL3/9619/5plnHnvssc9+Fk0PfeYzn7mdtjQ9Pe35
+R0nD95A7R5VoXITfQjLsu598NJJns6WCNs9IwQ61tfX4aEAtSYbb/35boIV
wKnT4T0bTvCZ0ABkp8dwCl6Gvh4YuVbBWcHdGaC2ueykPwE4P34w/uGDaf++
N8yCJ4AAqKlbAGpyX573CAw9WLfy0JtRbxWrGbcuEWr+0qVL6enp3pM+LHtL
NOzuFwzUyFKTA2o3EfUGag69cae9q7DaRUCYwRp01CzRvbhVHxRiuIz7Fm5b
CKNGx4fm6G60TpcNaTyA1bjPAf+b2toJg7948eJ1887XTW3c5rt+fn7+jjTC
G+1eGPeMJ57udABh8UwRUjTCYRca4cLSQVRnLnadYddoNBq2Ol0rLhrZ2bpo
G+WyuUk4N7O/bdXTx0s2NqAG2PHx8a3+0AupMGxyAHsNhHlV36b2j7lBWDf9
gvbpmQVubW1+8NOf7Orp5PN5Doft059+kDxWFquLlcqRubkZouyacQusz81O
z02NLy9MT02blSvMd47w/+lgzb8dze1eZg3z6zMzU5NzU1Mz4/Mz4wsz09Mz
C5Mzi9Mzc/Bb4BLkQpeWlhYWFlZWVli3voIwajIiIDrq7WG1Z6aGvCJ37dpl
tyOVvmd0uU0LybtLyKjW6fJYeng0BvCuJAYODJ4bcHg0CXfMruCOCLpmeM/g
KRUX60SThrQdGSzBR9saelwOJ/cCuu3xuF6vd7ocDgqhtJWyAUzBuTg+w3BK
PKg0K8VcHhmDqiMNhljxwbek5ZB25ZkB2apJgLfcKaAmwmBwdh+QtjuQaa6L
sqKLJevcnCk36LY7behVRVtp1kYxawSoXQzUuRXqwOFc9xjsEcUpxurNc92p
y7475Y4BNcbqa1v89UB9IyNlPYpu6MJu3Qg3343fsNCMhcIq+JiVlcF6zei9
H+yjQwG7QAaoznmWffhQ2dd9JN8/ljuM383YUwEPbLGyhSGzQ/TmHXmUe+Ro
Hgj16NW928aW6gr6kbcVIvQ4z8Q9+UhW7glBKMZpemmsQ0BPybXOQFOzr7Hr
dmREQZEqRdCEMNF5lywp7hUDCGmlWOsGa11jN2ws9JF1dmOBnZ9mp8bZ5TXW
5iTc5HYEnrhOp4NGODM32zvYd3nkSt9AN6LylGN+bmZ5cQl2WF5ZW7WilvGl
f/4G7LmGBVoRkAdiAdLf3w/t6ty5cyx7jc3G9qj1HQFqz6k91nT4EzxuIMnA
f9bMlhGWWYWPxDuNIdSaIrWJLV5oO9ae2giqcMgAEAGPiGa8dTJeiH2P60O2
DdSsZ9DhRmRv+P3QX3l2YzYZtbuluRUmTuwyY3c6yOwksS/1aLxv+nTgYBxn
Y5wbDPvznaE/2R3/810B407Wjp45TYwSXB7HBXwAbxLCMJstgUygY7jm3iDb
UH149iEsPTExsby8nPVSA3qf+mOvpnZTaPROxLQT6hzQeINdm2PnNaweioE1
TrITE6xlkh2fgKbHTo6z0xPs7N2whDKN4Hh+kp2bYGcs7ISZNcOl2plxdnXi
5A8fDfnBj+1N7ewq9thyYr3pbQCbWq2GltjQqJAq6lV69dDIZYdzg3LaZ6Yn
Z6ZgkDc7PjFjnpqDLvqVh74DjRaAdHJycmJiApYwflxfX+/r64PjDAwMECZA
2tK2h2Z3BKg9bwpvxMauZ6ssM/f7F35SVZmanRlaXBgjl5VcvtQC0M24ljFo
O2mXfdPPBWtMXU7ErmgyPnP7gcLxsHkLGYBTxGvm3sbqOwjUt/6r6z9ioGbc
8zMAyFDsLqQwRKCK7f3IScgcJdFC3AjU5HpoboYTjSfh8U/iMo4oEYYNt0k9
HjQynMsiFg9/9owoPVDscNgIjb+p6uOD2zZ5C8AvFxcXgbFnZWXx+XyP+TTZ
AT5628d+jIXhKhd7JGJHDZfTwdhW2RUja87rK+ha7+6zDgzZhpTW4VH70Kh9
ZMyqHrNqVRvau2OpH1vXoeWGQbmhU66pVWtjmg313LKWXVr0+f5P/L//i+Gc
ChcAGvG1vMGF/NYFIMhgMJEG7+SsyjGZh5aGbKhgnIV0Hw7cdBUdXS43k/Fe
sl7KtOtcVLZxSXdK9cF4KT1I8wbCxdILHU1lQl7M+Zb8KUurSV9vNsoHB8rK
y0NqqhPrJTk52RHLiyaE2LAziUfhcDIODNRIOcQStwiWmwBz29wAvGPN9n2g
fj/Zdnu48SCM28YeTd6wxOUYVb0N20lZnfDuZGwUYtSEXXtMo66ZWMRvcgb5
hiOzbWjhSywLD/6RvQmPH0oxsuwiHJDYhHAqRs46iPUy779udoZYLXq0LttW
fZAVz2DQ8y7waDw+9hBNxI1deGaf2EvAU3NY2fVFdiFVkaZitNPs7Bq76mCt
NnYdioO1Y7WD825Y2ln7Bru+jtQd8OKEjVYYiiHIcCG4zIsSZYXzoA0h6040
Oe7ADHCb+AB1M26egMbgoJwuPJ/ooKxo1I8nLhGTZJCKZcPFrtKcZ5a7NbIe
IyLWPZPCspxbIjn49kj1HZxM9Ky4h6tOlp4/sff54YHq2spws6ZOrxboVHyt
mq9TiybHm3Rq+dx0n6gyJebscUFltri2tLuzgXWtES9FDN2cfQi81lyUY3NG
knFskvB7V+4uoMahnIBL22nk6r+B7DPYNTvF+a3gqagNm5UQ7BsnKAlQwwFs
dmRWSuGxFgD1d4+VfuNQkZJl5xBQA19xYRdgbDHLEqU37amN+vp6hUIhFosJ
y9Xr9R4X8vX1VZa93oP1Vu7xOicvxu0FTD7e/oj17hI8+HFhfS+eYkYaEADk
KXY6uzlXTWmX2BUHa7+ZGc/dUOCygbQ5uRthscs49p6i7GxklCIgvHaDQnp3
/L2TuR18oFmLaRyxTZYdGhvWmnTzizNLy3N41O8isykkyNj/97WH1nH7v+4A
8NvZ2VkWN6HR0VHWbfW6bQXanQLq65SHaMW+5rP7pfGR1t7Gwrigt1amOnXD
IrOq2jAmNIxVq4ardGO1WlXtuLHJbGzUqqVmc+vc7MDZyD1FhWHNjcW8imSj
YZClYYi8hjox67zW9oMYZd3LcjtAzRKY3eLg78b9CeK5sF0XxXLoue5i4HmM
zy+V8ASrNucDn/jUqt1OvgU8H1GOkjI6OowLEuXIqFKpujqiVqoNw8Ojw8PD
V8fGmtSL/3Kk6uvHayTa1QG1bkytUqtgr7HhMdUYfFCOaVTq4atDY6NKNFXB
sDJp/crSsri2jnXHn6SB3bgD/TnsVtotW4VrL3ZxR+IW3q3iIkANL0QnMWCA
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
38IkNFu4//X//hvQ1Rar3T8AHDboeme3QCrjx4PqLeORsLiLCJ7j0fXVr72U
SkiA/n9Ouz9aB13ffeMb31i9Yv30Y/KP3VDwu989z27HsjO4DosX1Ks+wZfM
qvNIewHqz9rAVyORSVev/VntttXmR3Txa3NiMoXGiY8TlUrlH/D+ZZqHMueA
x59tqd3jdsJSXOhSGLydwx4ZfCo7KaK7KWdBdknHbxm/XHTvUuElNnHmZpN2
nDXPa+mpjTFMcTVTHAhqAVN2r3FB2c2uvjB1pfJmd45BwIWrinc5C/Lh83s/
uFhMOfzfP4764HccEqkkJbGQnBYVFBQfGhp85AghMrKMQikhk4sp5BxSYi4p
Jj7ioNN6D9bkwm7BzNJAGHuG8MDDS08LaqSotTOsK/1pQx1paiETyFcUjQJQ
eamFaJZ3maQ9s+PcpuILQEVTS+Jb69LPn1hflRMRG/xxR3MmvSKZCXp5Er0i
KTnmYH56MLMo/kp5cuWh965nhrTmxXAqCayKRGZVFLMmQilk9NOT56Uw7RIS
z4DGyLrSS4sDAhtQGtxFDiF+XKsFNLWkWTvdzmnOcS4a8OS1bjdKpvE4UD/F
z+o3fIBZt2z70Q9e9nr82d3eeDR0a3P99MevOHD3I7SI2N7adqlvcOjilZV5
C0Cv3epAoPbg2RoR4dFrh0cuLS7N4VkcvbVlOzs7uVwuGqXIHOdvzy20Patq
moPvAV8Thf4rL0D9RR/qF9xcXlDDWlp4SBq0Eq7YYT0t78oO7rOK4sfzSmud
q+jrZzVoFosF3AJco+Rm/rnw1Afk9hgMBhtyw4LHZ2U3VpRnxZkklzQT3Nmx
ZpdusCLj0LWOTBO/FfS5Sc71lozp6w2KewzlFKT0LJ++oO6pzj3dzyYtKnqh
0r5H0/JaLYqRxGOb+slJ6/72W0WHDtGSkssJJCCeKYnJezdtiThzqq4gtySd
WEom5Kel5pGSCjKSI88dwDAZ5rnnclz3ZdIbdrsHnwzqy09U1K4Rl30Ic41G
hf5GL+VqAaWFbK2IpZiiWrR9bQ0xZnmPWtBRkxvaUBBdnx9dkxvdQ88/tOUN
ShwQ1WQgqhmVyYzyJFZFcn1+VH1F4rlTG1pr0gbLU7rjDjLObe0ojGcUJzCK
Y9vqk9JiP54crZqf6Z6TtgJQg3OBapKKPKsBmV2GQSCqgcyG9nABE/AZOenB
uBgpG9YdmGm/2l871MuCFW/xeYQT9iFQY/4p9lnafVA7XB6b4+Uf/hgSx+ry
m6a9115ODDAcgdrtvm++ti87nBZvni4YUO3xJrdz2h1wXRLDBAIBnuPU6cGL
wcFXuxz+THQ4pTHkrof355TS2H0HKryUudsb+261Pgxq38G/APWfSwODYVah
AsNbIuUPDPaMXBvqv3QZDPcVG6bTm43GOaCf1VqNSm9acGDf/eGrgJ9A8YIH
tVqt0WjUaDQrKysjIwBTWFtbmz8WBnq0PpvzqscFQO2dqnAOr5w8uFUnHdFO
dSjvMlTjVIfmIil8w4qiD94doxsmWLe7cgRDlUZRu2KSpRGxFTy6TtaSGrnB
qhuS3mnU8TnqCQZ48opssCLqeOWRPTv/8R87k1ObklPLiKQSSlb46eBtH6yl
lZcVp6XAbNVpSWWZpKyUuOKs9KN7N+qUw27HbWj98Ix63MMAxbjd4xFQP87f
YzWonbbLMLu181pB5m6zslMn4RilrToRvDX+/+y9d3Qb2Z3v6Znx87yZ83bP
/vF23+68nXm2Z5zGqe1ut7ttd1AntXKkKImimHPOEcwkCIIEQQIgAWZRDCCJ
DJAEQTAHkUoUc845Z2Sg9t66IISW1OqW1m13u3VPHbBQKAIVP/W9v/sLk5JW
cerUI252sgvQ0gDU3PwEYTE51t/a6+YJXmFyWXZMVX58MT28Mie2nEEAr5W3
kxytj9WWU4W0iJ6cCNLF1wGxOTSCKD8uOcjC/eZbGzPSpWEY1YjgjKwfgMnI
0wOBGkXEmNw/cM9qwdpEVVVRwPJEY2F2AqbeNsBqxXia8c+AGuX6eGFQ4xk1
9ADUeq0xGbROoUGdNwOemkmr0Jg8tKF41h/ls0NGbKSzdYjSuNTH/1enMyVe
0uMVwLV4bYLHKakxI9xe5nr8Szbcho9XpcFz6SBKqzTqpxX1K1B/65oBGx2Z
BMfn3t2OtfX5xeW5uaVlfGAG29jc3dra2tnZOlQq1nf2wS367796Q4NXv93b
2zs4ONjZ2UFVmIeHh4GcnpmZMfmBIDGjVCpfcGvgnbmysoSreg2eI11Rw89f
n+6Y6+GtDHJ3xsSiwpDaUgLA7+aYCCxZ6q9QLzWy6T7rw6LlQehKvT0lFt0K
rquMXR0WIkov97JXeypV4w0lES4OP/5BzAcfVpOSC2NjmUlJsUFBge4eN86f
z0lJgamZSHFMchw9JZaWHJcWH0uKCbnbUa7X9EDfD1iRHIC6FSjqJ0H9OY55
BhOr4dQJFbW+uyTfTbvTOj9UsTBYuTIqmO3nqNY6spKdMuLsKnMjK/Oiy1lR
3MLEIOdz+ZSQtCiXLKIvmxVXmk0oY0axmdEV2bEldAK7MC7M91IxLUqQFX2/
MIZ45c2uIqKYHh1md7ww1ZtTGNkkTtueA6zmoJhEk780UNH7czWS2yFAV6O3
SEuDedVyfW8zXcYh7MzX7S60luTHY9iuTr2jUR9iR4GBnwU19hKg1ipVyLHO
FE4Io6Wwo7hXZA+BmcHwhJ74aKbyUGUEO/RCUePuH1qEaPS/RlMJ3vXTaFQw
OB2//Y1OgMhD24CZTV87OW0S+Tq8frlx+/FEwTq83swrUP+1N/Wv3FRKbGFu
GXfJQznwNOCCV2iRWyuGur3gPgDXyC6GjS6s6Mxym5uqHWFmC03hiqYYxhdp
QCYp19aXDMZNAd+puNPMXRlrWhoQrI8ImioSNkbEvJygrQnJ8kAl6NEDMh/M
ybiswM3RmrUBvnJWKi4I2BoXVLH8DubkC32Vi32Vq30VG31czbic4Xnl9P/5
v5cHBlSSk4vTyaTwENfr1yoLCk69914pg5FDTs4ixdJIMZnJ0VRiDINMSkuI
4FemYYZBg/ahVt15NJjYYjA0PgVqROmmZ4Ia6WqNqgmAupofMdVfujzB256p
XhsXHSy1tUloeWnekV5nK3Kj2DnRZUyCh/WHFbmxlbkJFTnxYe6XOPlJgNW3
AZ+ZsWX0mApWHDs/Ni3OOS3KrTovqYEVlut7vjLGhehwSsgg8HKiK/MjCmle
B8sNK6M8lOgDyWmTM97Ug1s9jZkmZw80A+g9cid3a1qyNileGq3p7apqrCvF
a3Grn1TU8yum8/XlT+1j64fBGFcFY8MNRhZBpYwqmgBEa47SjGpgNSyjVobB
MXh+aZUaue0h4a3UatC6QICjFI46rRIX20dVbvXo158E9dcK16btQRE6nZ3t
o6PDyHW8klOlUr0C9bcd1OAgTY7PAC0CS2/gSXJQtVAtnmIa3KFwDB3DZlZX
tvX6QzzxKYbbpRGZkYRGgzXmxSlQf/PFgxOhi+zG+pIerysNvQA0O1RS8MRD
4WKfcOlRVWN5onqxlZ8bCh2nByuWh9izA+UbkxJ+ftjOaO3GgKCTnzTRkbs9
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
5385akDzTk3CrJWtbR2Li/N3O9uKshgA1Pvgfp4cmZoZH58ZHZ8cGZ6c3NBi
P3j998u7e1Nzs6Pj4KPJkbFhMLOxtV5dW6PVGTgc3uMzhvvZvASqUcAL9iSo
VWvLQyO9tTP9wrURAXLzeCDLbOQkPWrMWugz5jXtk9PG2nMXHpRsDvOWe+E6
ezNSbkHI1kz98nj1wojok2P/s7OzqLYhW1KfKaqjiuUZNU10Pj78J2nOFMgp
Ynk6WFLbzJB35NByfDnVKXXtrIqaFHEjraYlS1RP5dekSpsYNfWZUllmTW16
vZwukwKGZ+dm+5UUhTc3MiS1yXXNaVJ5CpxkJFkdSV6fJq9LbahLbZKmdjXR
hWxCNtkOEL69Nu2ONKOY4hHt+mmU46lol3NRTucITmfAfLLXRcs//SDc9njI
zU/jvK7ePPcHa4t3qal+qWQfL5cLBH9bWoJPaox7apJnGsnXz8MiKsgxMyEk
wt02yssJyOxSQlCup33CtU9LYr1oUV5JEW4psb5erhYifgEG+0NAnhwYjvxw
j/QTBrtRX+QX/QrUX3UzIJfUo/Gy+gaZFtOXc8ra21rAM5VdXgq7vZheiR0l
JX7uHYZoZkKluX5ra2vDjmTk7u7ucxT1EyNiCDVHJoLH5ZyQjbqrq6usrAx8
xGAwrK2t0W8pFIrn7PBRexxCBSW0TqHBoCA8UCGo6isrK8Gvt7e3c7lcsEcm
A4JJNmNHdDUHsmnMFPUFMDM7PJivr68fHBwE87dv346IiDB9lbld4mmjzWc2
/3NMH1lZWWCvGxoawBIej4eZPR1MrP7CR+Fnmg4bG50C/7a0tjo3NzMxMqjd
38W0Otz1SqvWKnBHaVhtZQ/DLto5ao/6OxodHH4CMFVqNTCWEH+jVupQdwxt
tUb3wl4f5qA2oAkH9frKKCMteGW8HkYXDnF2JsXVxeGdktSNUSFugmavDXPb
eYnT3UUwrrwPpmBaBtOIsJTld7DePjMiPn38Bw8elonq8MRKslRBcwa/JZ3T
mMppTqtsJHOb0njNFEFzOvhI0kKLTbMRytKkLVl8GXTA49WlVzdnQS87eWZN
SzZ4K5HTahoZ4vrMho68hFQHfi2ltikLkl9OlchSaxvS4assTVKbUgfgX5da
U0dpv5OXzfQuKY1oa88DkJfWZcjqaTIZ/dNP/8PH46yX21k/r8uB3pf93M+G
eF08//HPAlzOhHpbfPr+z71cL/r4WDq5nfX0uezjddXV7mwywSUtyTMm4qaX
6ylygntqgldaQgApPuDi6XfTYwMZQe6lYd4hx98uCHSkx3nT08JJ8UGqg1Wg
Uw4PAagxtd6gPfLDxD0t9agGhFb9CtR/3QZuOtC9UeFdGyOynJxdoeZRGbxd
PcFtodKo8SrUah2g9eePKZjQ8YRXA3ZEBiAmd3Z2AL5sbW2dnZ0/j0XmlH56
WA3mYjUWRzc6fiAeAuiBlWHSnhcYLMPw3TFmmjLg3Qlj50KrdXayA98UEREG
Ga5WGcxWMKWAQznwwfEx//SJhvbdZN/m4Q18f0pKCtDAT2zqE7aRZ7anjFfG
Bg5pVFQUhvcFTOQ3N9Q8x0flc34Jm5leUOt1uDMcXj4AXBVKNXxk6lFKD1gF
QKE1HOCFA/R47RVwdlAEhAbc3EfHEy6DEhje7/jGomLmL9aeBjV+xaow3WZp
fvLymGyxHxYWv1+X3teULWPHAErPP4LiGShqxUytIMdvY4gLHTwGOAvD3Plh
fkNN6tiQ4MK5nwItXQfQihKQNqbzm6iAzJDPrencFopxvjFd2sWKpdjWtmdJ
cLEtaqABOANKAziDeUkTgwsW4gnxhI0wEVNIkpW0I0fUksWrhwGMkobMmoYM
sYwiqU+vbcyUNtHEMqqsJbuuNTsi4RrgOSA8ehXJMnDOF5y/+jrMzhR43d33
irf/NTvHEzY2H9rafGh56a1zJ98IDbZzdbno6X3Vw+eKu/clf//rH33w84gg
azurY872H0eHW8dF2MSE2cREOqQk+507+zY1OSib4FseG+z5zutCcoyv7YUH
d+rAqdNr9tHVoVLrUaJjHNfGm9AAR7q/+GS9AvVX3PRHQ7oateoAFfMwukwj
nzwUVKBTavF1vtBU9QQTzHvxiCdIGz+x/IkZDHvSBouW4AzXmWzUgAmmwUTM
zGhgeIGSfEegRqYQ/ZGvvtH2rMa76XA71OD5gJfSfoLSpgm9RT36JwYZzY8G
ZlZS02BW+s38gHzJjTftqWmvzX/6iXNhOiYv8BQzYBMTEypwm6JRVxj4oke+
MrghWq/WqvAK5Zi9l9++DvcXMuDJzHFLNSS83jgCAo6LRqU11gzAOzKGL/HE
x46e1MbOFIatrK0ay80gF01wNgyg67QvkxQsjdQv9vMXeivqyiJ1qy28vMCt
ceFqf+XSo/LFnjIjqEf5S4OVgNITj8pW56Tdnblnzv74YX9lTQMNuTSLGjLB
TG0zA0AVvFbjdBXVU8G8tI0Vl+ZQf6dQ0sysrKMKmuiCehhFCF6F8gzwCou5
NNLq2lnyO3kVEhKF5d384Ja0jVnbzgQfoQlmnO7IgaW72phgBnwnW0xKYXi0
95TK7xTWtubUtLCqm5lgRlxPb+4stnX80D8YpmYKCXc6d/EdN49Lfn6WJ0++
dvb074IDbXy9rnu6XfHyuOLpfsnT86JP4JUTp39z8/qxAC8LH/fL3u4XfNzO
+Xqe8/E84+lx+sa1P/i5nCX625G9HK69+Vo5mYhpD2HOfwO6/Y0hSAbscVS4
WXuOB7WxvQL1V93QmBqOJzgSr4Ke1Sg+EUOjbBp4Mxodj/8sIfxPSMFnrmOy
CT/hbGwyTZuGq0wT4io+SP3YP/9IeulNr0Z8adG1CO50tbHiCHIqwy0r4Eeh
kwMaajQj2+c9Uz67hc/b65c7Yl/4tV/FN+u1uvHxUaCCux919w71tXW0yxta
lla39pWaqYWF2cWF+eWl2eXlLYX652+8rdBjqyubSwvLi4vLSyvLM+DD9bWd
3f3W1nZwYFUKtURUjWG4Hwjed9MbPjekyNzBEg3LGncTw9Y21k3nGqX7wJ+z
u9ZXPtxb6J55wKm+Fbk/U7M7VcPPD9oc5q30VawNVIHX3XERP89/ZZizOMSd
G+LMjQtnJkXvH/sfubeCYlNsYsi2sal2YCY+1S6BbBebfDOOZBOfYhufbIOm
NLq7o8cHqXSPhHSX2DSn9NwAUpZHWo43OduNmuedkuVKL/JPzHAAUzLd2SPk
hH/UebAwgWofR7EFC8FrUqZjMsMtlmIfl+5ApLtGkW3ITE9fwkXXoJOpLO+Y
NLDcMZbiABPxpTuSs32kbblNHYUhEddDwq1dPS9dtfoknOBq63jmk5O/8fW/
fvrsmz7e11xdLnl7XPV2g1j28rpgZfvBqfO/9fW28HA+7+Vp6eNj6edzxcPl
ZJDveX/P02433/ew/tDu/Lsn3/qFYX0ZgBX3s9Rhxo6J9nG46JMjJMiD9QuC
SV+B+i/UcBmJnzMjljEkFI+U9Z8XBM8Htcni8Sy/Xz1CKBpVhCmOcT6bUv2Y
0xsGVuB8NjEcM/ld42RWaw6NBh8k0HBWq5UI5nqTPdzcl9u02eb2auOWPXcQ
8KtgKfZVghrs0MzshEqvGJseedT34F7Pw87uh7sKnVIHqwMoNFrwuqOBmS7/
nx/+7ECLqVWGwwP17p5iX6naOTjEE6IaRoZGAVDXVzcAwA+VCjSAq9EqnhNF
buoOmOS00fPHoF9dXzONUOA2atQfPJCJb+0v3i2nB6gXm2celMI64wUBAM7L
vez1QYDrKlQ+YH1CPNNXNT8mXJmv//DY/10nz6gQJFSKkwqqCBU1yeXieLYo
plwYXconlAti2cK4Um4UtzqpSpwQlWQpkpHBTHFVFF9KlrbQa9sYoiYarHXY
TK9py+bKKHWdOe29pdkloVXSVHl3PpjwPNVMsBxMYKa6hSbvyoHVb1vpbT23
KDmeQIo3dhcABQ40NpDiYF7WkQve8urSiZmuGUwfcobH7/7wL9dtP3L1uvL7
935y2foDB88LTh7n/njsJ+7elo7O569d/dDZ8czli29bWb130+Fji2vvXjj3
lp3diavWn1jZHbcD0/V3na++42bxJ7szv/vt9/+bTFgEOiB6cNlDxYI7XhrT
R2iPdLX2cS/xqIf3CtRfi6Y3eUEcnR29zhjVYDAOzj8ecjP82ZD9fLyYvH+x
o3v2yGCiM/HTKKuO3ppmEMYRz8EKSuWhObqN5lmcxHo86sqAIXucXqdSmo4G
NHHg1lSTdEev5g4n6NI1H6r7imj8V2ngoTc1PQbkMD5plWoV2EmF3ph0+lAN
hxG39dg2bqDeQzZN/FmvMUZ/Grst0G8Ix6wOH0OEB1yvfg6ozXtS5iYdcC0C
RY0PZx+dcXBSgD43HMrEt8tZ0Vvj9cv9vMW+yoPZWm6eHzJ9LDwsB5TenpBw
c4M2p6Wrk7VLkzXvvPV/SOvSyyqiSqqib3MIZaK4Ih6hRBhZyo+4VRUCXkt4
4WWCqKrqeEahVyzpqkBKLOMRAMa5tYm1LenSVljNlt9EFbbQ8aItdEBsSQsj
IcMJUBpwW9CQAZMv1acDmPPlVDADPhU3Zwoa0us6mTVtjIjk6yh3EyoQA14B
q7nSNDDh1u9MgGtpS1Z6tvdVm3f8Qqw+Of1bvzA7n1Br75Ab4O3Vmx+5elq4
eFz29bnu4nTW0f6Eh/tZLx/LwOCbJ0/+Fsz4BFm5eV12czgV5mUZ42NldeJ3
npafqFfHMB0MNtRgKqVOZZYL02iPwjWa1njXG+90vFOJ+2G+AvVfsxkea2nc
xIDe6o0T7keFQsi1Ziv/eX75840emNlolymu5GihUU09BUwIUlOAOZpMw47G
OlBGXQ2t2eALNGol7o8AwYI/pGAwvQHPuW0w60SgrjoMNDfokJ+JSZ+jKEWT
y/TfWAPnYXZ22oApVepd2PnQabVmpQFgTVsM28Cw967auEUQd/WYSoepdUZQ
G2sH6PSon6LF41sOtWqUdA/3r0P5Op7dTMZ8kx8+hp+Oze0t/PmqNrrTY0ZX
arvrJ7HdsZXB2tVB0fIAZ3NMwMn13ZuuXuxjA0rP9ZRvTdRw8kJ35xs35hpP
ffhvrY3MGgkZgLqoLBQQuKgylC2KgqAWRZaJCbe5oaX8cIE0MYPlzMh351bH
sQWEYk5oMT+8kBNSUBWcWxFYJCQUCqOLJQmC1kx+C0ymF0WxgSn1mjMQfgVy
CpDQIjDfkA5TLckpVfWptd2stEKfeIaT/H4+4DxYGXqYNFFFrTSAa76cIu3I
BjOA5PQifxLDpW9MePLCr09dfB2ANyDE1tPX0ifgelCYra3jqZu2J/18b1he
PubpcinA50qQ31UvjyuA2x8f/01QiI2Pj6WXy4VY35seV0989ObPyvKomGYX
Myg0mj217lCHadQG1Wei+I+w/BjaRs9VneHx0O3z2itQf+UN3VKfAbXZp+YY
x/5slH7+5kD1hY/NmfwoTCOG+iPLBprBk+JCY4i53NUflRQxmUGOQr/NbM5I
LeCXo0KLFCAsJ4WUHnSrxitX4CtrNeoDY8fQYOoeaoxbcqQ9jHXK/oaADYA6
Pj6O77jKAI0V+jv37oMeCHJNUao0+wZsHsN+d8naNiRxQwePHYQm/jSFp0+H
e0urYIwbhr7FmDkGP2zggfg5oMaOolPNYzbX1tYOFIdHpg/jk1pnwM+F/mCk
t2V+oGmxT7LwiLs2wAWgrsrx2ZkUzz8qgyk+hgRzfTw5j7y32Gp14Ze7q+2T
I6KhgarevrJH/SUtHbT61vQqcUw5P7KwIiivzJ9TEwfeEtNvMPI9ga5mC6KL
OeHlkuhSEQFMZeKo8uqYQm44TEkNsNxCLxLEJmW51XXnACENYAteYfLqBpgN
j1ObCnFdD7ldeycnJtO+rDYFsF3QTAN85sjT0WuljAyWQIcTOVXenRtPdWRX
E2tbs5vuFt1wOBYUYRMUZu/jZ+Xrf8M/8Ka37/XgUPtjH/7K3u5cFMEj0O+m
r7elv++1QH9rQriLxeX3wNtwfxuCl/X1j37vf9MCMxzo9YdAKsMOI4zoV8OQ
UoOpU/O0TjaCGokTNKzzhVLkFai/8nYE6sdP1CNuG+3UBhONvvptMRiAckOO
FnpcfRmOTApH3r96NUrxAW5VM4uEuYHC3EyNPENMS4760dC3w4AXCznQGQ60
6JI9gD7/BgWQ0CgE80hUa7XQlK058mDUPu65G6A/Goa+Cfb0dd/8NLCPG9j3
6elZTK/aWV/MzcqMJYS3dnbA4Wbl4fT42MTU5MjS8uC+9peXbt4IIw1vagfn
VsbmFvonxifmZqZBGx+bHxtfnppenJ2bmJgaHB8fnp4dm54bG5+eGp2eHZ+e
npx6ZpuYmJjE2+zs7MjIyNjYGHg0VFdX7+zuL6+uHGEEz4+tx7vk+oOywvSV
ic65XjFQ1AsPy9eGubUl4TuTQF1XzvaUrw4Ll4ZEvW1FP/2f3zlc75oYEABQ
j4/wJycEw0Ps6Sne5DR3dLJqeIzbM1jR0pXHlSQnptrm3A4WytJKhfG3OQS2
JKFMFAcmtjCOU51UIY7l1Saj4JfswmBWcYi8PbemiS5tYwnl0KFa2pJV0whd
R+racwCrZR25NS1ZMWS7unYWWEcM3Utokia6oAFWKq9uzZZ2sHj11PquvFIJ
KYx0o/FBsaQ9W9KS1XzvdgLZ3T/Y2sfvRlCgfXCQQ1CgbXCQnYPjxeOfvhUZ
7e0X6OAdYOMbZAP0dlCgTbCftbvNmUBHCy+rcx+89uN7UhGmOlCo9tXgokX5
EmBDozyfHUA0s2siByiDaSBeb/gSTh+vQP0XaMjfAz8fR1hGWT2Oxs/QC7Jp
fbUgQk9uzZGiBhsUHgmjQr73ve9huK4GEvr7/+tfFYf7GpR6QqPCLcTQFqFS
KUwqGo/MU5oLbNCL/853vgO+/h//8Z/gL+lgJjctBDU2sbgREh2rxXbVmpWp
mf6IqBCFDip4lQ5uhg6KSRUQ1WCmrbVBpdzr7GiJIoSZHhbweWFS1PrPKMNv
dAMnYG5uASgxgxroMc368gIsFaDV4KHF0BMSHJdFA/bD90+edg7YwmAyiAO9
Dl02qOoWks2oqh4qgHuoN/ZYnj8+bW7xML0Fj8GtrR342NUqjaw2WlaVJXnp
ow9qF/qrgaLeGOKDqVNMHunIXRvlLQ9y5/o5u/ONFp/+CDvsqyiM5JREs4si
KksJZbdCeJWEitLgspKAqsrwCnZkYVGopIYSl3i9Rk7NLvCPiLsSR76ZkHYz
NsUqjnIzhnSdSLWLS7FKotjEk2+QqM4XrV4jUpySqS7UbO9UugeY0hielCwv
Et3d+MryoRcGBcdaRhKtM/MD0pjeKZluKQy4JnglZ3mmZnsR6W5JNFdGcYi1
+3sJNFdacQgh1Q53ArEnZrqHxdgcP/XaTesTdrZnbW6csrr+6ekzf7RzvPDx
ibeuWZ8F0w3bC1Y3z1y3OmF9/birzVkni09/+/3/y+PqRQycNZiYRQVOmAJ6
V+JdY6ODPR65ZgZqE6K15qxGLlKvQP11acZxmSdArf2MuUP/FwA14pvJPxlJ
6/jEhH/7t3/b3d3Ny8v77ne/S4gM//cffn9ne/O/fPfv/+HvvwPUtYXFpb/7
O8Dg73zve98FKs3Dw211dRW8BXwuLi4CM//wD38XFRUJPoqMDAff8M///N9e
+9Wv/Xy9Hzy4l0ajXbNz7BudjSOm+Ad5qrWbUzODsQmEA40CfB3YBvDv7R3N
Pt5uG+tL//Uf/6GttfGf/+m/NDfVczmVB/u7P/zB/wKsbmyor2RXCHj8f/rH
/2rai78BUIM2NTEJH0ZqFWZ0X0eFPVAdcJQeFusZm5hYXFPjV4tSqzEWF4Bh
MjDfl9ZgDBhXwUqoYIJpGHX6L0gsrzfLo4iZbCB6bH1tG/fKU+MTPjQArxXt
6uzQ7GDTbJ94dVi89Khie7i6g5c6c78cLyXA3V9osDrz08PVlpH7JfNjwplh
3jhQ2mO8yaHKicHyuXHuzGjVxEjF5AhvdanhdlFIX0/JxDh/alI4MlbFF8Wz
+ZEVwqgyQWSFOLpcGM2pSeDXEWuaqDGkG+KmjEpxsrSNCTNUN9JwtUwHahnG
uTQwqltYbT3lcRTnIk5CXUe+qIkubmbUtjKBVAbrACEN3oLXus7c+q78cOIN
2Z088BFYUtPGBOq6vj27tbuw62HluYuvh4fbR4Y73bA64etnExzmHBjpYml7
xtHrekiEZ6C/U5ivS6S/W1yot8O182fef0u3u45pDrX7OzBIVKfRmSxOpsFZ
o1feM/j70lftK1D/VdpfwNbxhTR7pvXSCHMzxwCkmU0GE6Dl9IajEUmNVm9M
Vo8vx4dIUcwFHJDCQzEUePQJTNkJ7eEwb6ceUx6o92FCGpX+u3//jxAakEka
k+kbWjo0WlTqF23MUd4/xZc06H0jGtjL2ekZNBoI9siUHQs7AinaT3TYQZdD
qVZA2zMO6gMDJu3sJqSzeqfXkCkfHk9YcABMOmQA/dzfPUoAaMoxaJTWBmxz
Yxc/F0cxGno0XqnZXBzLzwhbHaubecjeGBUuPeRs9EvERdErI5KDpbbrp3+y
t9Q88Yg9OVA1/Khscogz1l8+MlA+NlQxPcIZfFg8PsAG0F6crMnL9lmckY4O
VA71lo8OsocHyiemuBXciAoBoYwHXUHYohi2JA6wOjT2YmVNEreOLGnO5Nen
wWQgjTS+LB2AGsCWL89AEPYjWDTcLRQ2MMBCgF++nIpXh8kE84IGuE5NW3bW
7dDoVNvWnhK8BAyNK6OA5WBe1JDJl6bd6+VaXv+ju/t5O9tTIWGOPv423gE2
HgE3wXTu8vshwY5BXrZxgR7+Djfe+vmPssiJmHIP0yhxry2NwWDKD2nmwoUf
4y+WyC/YXoH6b7V9Ic2eBrUxlfFRCia0GnKWRqDWmeoBwGwUGjzNlHEA0egT
jtt4VLjDnlavQb0GPW6P1htN8UCBqFR6OMCI0tvDgEdMd+S8rcNjYfCsgAbz
nH6o/4j7IfytgBoctvnZOfhQMiY/gYGK5ivARIWwjqKxB4QGNfbVSnDQdzCM
Ulnz83NOtcMbh2jUFjeY4Fl1NXCY6rmcMJ1rgzEcFZb3Uqv0a2sbejjMqzAg
y5wBB7VGaVCsl+cnLI9JV0ZFsw/L1vuFqtkWXkGkar3r6qmfKTa6Rns5k4O8
wUfskf6q4YGqwb7ysWHO6FDVcB97fIgz0l8xPsTLZ/hNDYmGe6pmRsRjfVyw
8sSoYKC//FFvaVFZcDk/6lZVGKc6KbckKDLxilgO4Jxa18EQNVJQTS4JXktL
UE/FCUwvESbGpTsA/AIsA/zy6tMBgatb6Zy6NEkLDbziPh6seKp9mZgo784F
qwnwcl24tx6Yz+DKM6pbclu6yk6d/Y2n9xUfvxt+gXbIIu3l9/+1d+XRUVVp
PoBzdGzadvTYZ3rOdPecPmOfOfZM2zP6zyx9mmPriLStqKMsHWUJCiIiCEEj
YW8UjBBiNrIQkpAQyFKVfV8JISSVjYTsValUttqzVqW2t8x37/fq5WUBlcUQ
rO/c8/Ly3qv77rvv3d/97reu9fvU58Xn/vXwJz6ffei98fXnVq/4vdXYx7N2
3j5JQouxTrSNEbJjeIDaQ3eTpCgtxqnm3J7XUo4abUUQbIkjPMu4zQsYtJ3m
JAtAdxJAEjXITo0TkC+kRmQuQS3Os4LPliStjOj2Qjj16SlsMHzNfYPSPAXq
zvYO6DLt4FB5eblMJmttbe3v74chCTtdXV2A20Sl2NWpUve0d3Z0KFVtSmWb
sqOhq03R2x+QVvCbVR+fUww2asxKVV9vl7KvqwMuV/Z0KlWabqUGKuiai6BW
tVoN287OTvgX7gWNyczMnJiw6nQ6KnGxkeg0vKAUIJEe2fGqwgR1a+ZAK0mb
aLgun1AX56cc27DqWfuwQnk9XaPM7W7P6OvJV3fndHema9S5sG27ntLTndmn
zlUrsxLj9poHK7Q9JYDVms4c5XV5T2eWRpnd1SHvUWddlB+CklHw5VehW0Jj
duaUBp2XE91ibKr/OfmhxIwjwFTnXgrJLgshphp1cSFxe2JSDsJOZhlhsKlA
IyyzLBj457zLhJcurI66kHP88+DNsIN213BBdgVhsOGygiuRgNXFitiwRP/A
iD0hUf7bPl690/ednbvX7fJdv3vXur17Nh709XnrxWf9tq5auex3iZHHeG6E
Zyed4yMEoolOgai8hXgLHqD20N0nqdwDwLCoqMjLy0s03MJUAnSJxyFEYwAl
zAJJcr1Rg7pHHlkKvN+SBx+KP5eIboksTaDM0DX7A16LN72zHoY8Jo7BmEJ2
ZspFC29BVZYEoq22yXOJCUv+5gFWUH5ORQv8LvGgFgD19vbiA+r1+pycHK1W
i+MRSQw/TpId0M6HTmNorMVRng1MznjylU1ZHYAdVNBBGG6GJXGcHN+IEzMy
HUD9IyMjdrvTZDKhoZ8A1ASlWdfkBM+N/+WN/zFoyjUtMuIk3pTsMlY/8+sl
pblBCdGfnI3cnRj7WXzMp1GnPzp7ZndM9K64s3tion3jY/0uJOw/9dV7Rw6s
SUk6dC7qk7Phu87HfBYX4Xs+xi8p3j8uercs9UhU9I4DR1d9fXrr2o3P7D+6
Juj0toCv3zsR9v4Xwe8eCHh737G3A8I++OLrLagZDIzc8e7Ol/yPrf8i+AMo
x0K2BYR/9GXYdiiwcyx0K5SgmF3b9648HLjpRCQ58mX4NlLCth8J3AzXQ4H9
ryK2++x4/sipTV9G7Dga8uELK3/nvXH5hvV/Wr/mxa1r//Thqpd3e7++7Klf
+r67mrcZeXaYY0Y5F3ztLtZu5Zw2isqMGBd9ht7kbiibPED9Ayf8wEQLvYcf
fhiFD9KzyDBj0CTqBEETVDhJujco0WdO19crOOKR5Xrt9f/jaQJlsp5GnReA
vdW65rVXbROjaBcNtdlcQrwwmAFQfiLGBcIZwepwEtc8lhOwHNl7aqE3bz11
pwn6HNhaXCaImIlumGICHWmWNFyzwHAdYzhYe1e0tByITr1m4icothIi4ms0
qGPcxpJz0IxmSCMKms1mDoM9ukUf1DCSCMULss70tuf3Aj/ckmrTVq5e8aRz
rLavK0vTmT2gzuvvydf05PSqsgf6CoCF7lFmDfQWGrUVVy/HVFVEmXWX+lR5
g+qioZ7CAWX+oIqUrtY04LS7u2RFxadk2Z/77ntFnncsq/BkkuywLOf4hQzi
e34x+3huRVjB5ci8S6eLrkSfz/ji6KktRdVn8yqjCqrO5F6KzCoLh4I7ORUR
hdXRxTUxfp//RV4cBMx2LgnZFJFREgoX4DWwLa2Nj0g8EHD6w/L6s7mXg7Mq
w0rrE1549d98P33bb9fb+7evC9j1/q7Vr/352aeJ9Z1tDNaFLDfJ8HbBapRz
Yi5a6mIwk4TRxN9K9MKbkweof+AkAjWO1oceeghBIykpCZbhwF1XVlYSsYOL
KA6f/98/AkvhtdhrzGLGsGB22/jZ2MiU1CSAccG1GZCCwjD8gCX6xknWbvn5
E485bePk87aToz/6yWMw+FesWK7TDorrRECMn/zdo15LFlvsDoDo8UkbQ9N1
QT088tK4Er+PSK1W85JXwEtC/0lTZAoqP4ZAQ35Nt0JpovFwSRgQK7XKczsL
EdsPEoaRxUBfN7s1ybHoTlsj3gs4aoa1s5zEA53oLx2cc6wgM9bQX626njWh
v/Lm8iftxquq62mdzReU19NUbantjRfariUp29OaGxOIrrDlQp8qR558uLwo
WNWR3nktuaMlpbUpuatV3tGS1t4MO2k9nXIiyu6WR8Xs3HfkjezigET5vuSs
vybKDpyXHYhL3puSfbSgKjytICCjOKi4OvpU1I6IBL/8ygh54ancivD0oiAo
WaUhsA/bdGomHRTz8eFAnystSbIi4tuSXRGKqkOqYQyGAri958jq5NyTcEpe
djKt5Kv0kqDqhsT165b5f7zm812b9r/nvfzpp3av8+ZtFt7l4GA9YbcJUQo5
EgEYTVWRqyGLQXQOZadmQc7DUXvo7pDIUcOAXbp0KXyBGCVp0aJFcHbx4sU8
Ha8VlZeSUy/W1lVHnTk9PGagCEGsdyOjQquuVBBbu0WLvRY9wGKMTirD9lrk
RcJxT46ueuVFy4gRhjz6kz/48E/+4Re/fOKJx42GIaJTZFiLxQJzxI8feTQs
MkprNFldLhsLrIwg1EY2EN1e7ifq7e0VE/KK7O4MpleMbsdwLEx1v/jPVSve
PTxJcMNBJkTB2pOhIc1hS6Nac1S8dOO+kgbxxhwQyNUbjUbRlUnkvumSx751
01vDuuYJU9PrLz1l0Ss66tOUzTJA4J42OQCvqlUG2NvadAG3gNKyi0daGuBf
uao1vas5DXbaW9I62uRtzamdsH89paUpqa83Lzbuk8PH1mYXn0hI25+UfihR
digued/F9L+m5R7PLPmauB+WhpRcjdl/fB3gc0ZxSGZJKBTYSS8Khp3ssnB5
IVwTVlgVdeikT1L28YIrUWmFgQjLwFTLi4KBo04rCCq8EhOVdODQic1V11Lk
RaHpxSFZl8JlRafySsJLis/4ffTW574+m197/pX/esY+1EfipzgmnU7B9M7B
kFDSiNXoRyAoUIQ4Yx6g9tD3QSJHvWzZMkzm0tzcDAfdDiwP8lTUfOVqdWJS
wtXaqi5V29vr17hcsOaeVKlaFy/xIqOZiE+JzQHLCBGnKR/CEs9x57hjVP/I
3y4BLGHtXEtT+29++wxc/PLLK/S6ASLrI+YhPLAuP1r6SFeP2nvjRitd8x8P
DEQunaPhLAQG5j6izs5Onkrgq6qqSktLy8rKdDodPLqWEsAmbPWUBoYGYf7S
Ofl/eXXPys/i++x8v9FsNpoMAwNG7YBOPzBoGOgzDfQZhwYMUIdBryV/5iSo
TazWYDAMDg7Cq4cGTIxZdENafup7QGtL1Cc62pqrle2XV654dnKktft6obI1
v7s1S9meAaXbvcXSry7Ikh+/3pTSq8zTqPK1mpJBdYm2v7xPXaxWF2jUBQN9
xbDV6ytz8wJPfb01Pe9EUvrRuOQDsSkH49MOJ8gBpQNySkKySk7LC8JyyqL3
Ht1YWZ9SeDm+pDqxqOpcQWVcbnkM7MAR2IGDaXmhR058AP9mlUSm5YXI8kMz
ishvYSezOFKWD5Wc2XPwnXNpAaXVF7JLYgorEwouJeZXJhaWn79UntJaV+Tz
2gv/8U8/DTm6nwSRhjWFYOVI7e6EIHhTAWo40fbVPachUPPT3Q/vLKGuf2ho
SFQn3ek7/HBpAXWmiNUAzngkMZGoBVFGSkWXPBVCOInoY4mXxTYKEO1wjLmc
1ugz4eeT4jGaPWE/aLYRxoXsBvzAyjvGfv3znzqtIy6bBYAaOL9HH/97p+BR
7+pRdaPkmVgAcoQtn6AM34Tb9dHpTi91b8b6uGUrFOBg+/r6oM9HR0fb29uh
w4Ff0mg0cGpsbAyWGMDr4ha4qQmrZdRiHeH5X63Yvnx3hJ7nTZP2ifFRh2UM
yqR1zDI5NmaboMVqsTqsFqfVarPORRZKpE5KcC94yySFwaTDqDdh2zCdA8y5
RMdAdMKuovyMlS8v626tKsiOLS84X5IXJ0sOkiUHzi5R4f4xkQfSU4MLcqLX
vvV779V/WLf2+XfW/NHb+zkoPj4vrVnzB58NyzdsePHppx9/c/V/B4bsOZ92
MqMw6mJmcELayZTs0Iz8iNTMsKT00PT82ONBfhU1GZs/Wr1u80rYvrd91aZt
b27ZsWbj1jdg54Nd3hvef91705+371kXdzGoqDKlujGvrFoOO+VX06EUXkqu
qMksvSKvbS6Ccur0Ed99W3b7b/b13+rrt3Xvvh3+vh/s3bnl4M5t/MQob7O6
7BNEdEeM0rkZzp2cEEydY90a+BlALeGo7+R3impfeGWwA1/IfWP1NI8k2raJ
RxZKr6LMDVoO/DNKL0UNF1pcALsrahKBvbXax2hoDjvL2M7ERCQkxMfGx006
XYkXUxnKi8AYt9mdT//7b0l+Mfv4r3722LhZT5J4UmabaLwoUFNvZRJfSLDu
sGPuEm6SYUSgZqVAfe/JqG/5FcMPVSqVNIu6WJWYo4eVZJZ3uUjsquWb/d8/
cQ7wdJxkd3dRf0QMlEdfDGUCBVt3bqbT00zjBPe+YLvu4szGYfel0+CGIYJZ
Z152iiw1Njs9IVsWnxgX6k5fgs7rUwVABbYwg9PgADRyC4f5MUglLJGsO2kQ
KidmqWOIU5TVyROFHRQXb2NpwQCw5BRrQZcoF2cjF3A2wRrfJRyHC8SfzN6B
+u2ucbEGrITDyHUsFRqxRKpvt0y4YXcGzIqexYKym53qyG9Q1N4pgpphvoYt
Ln/4hQMs9ybNHgILhTh3oP4lS5ZI08uKzi9itD2Hy07zrpIRR4MpuYpL8gGo
rbbJh5b+2G/fQVwnCqo/npm0jdvGh//5H39GB6kT2DbenS4B9TIup50GRqB6
NEm4KoB90epDIIzde78QdDKMO17UFVLrCzHzFz/dyp32pcNit43S2Kej1D8R
pkuCfgyDrB4GKUC/JCKAusEHKM0dhjcSRNYMbyIu5ISLxqlWDH1PHKVdNjTy
IbMzSQKIZmnidDC1hZ/b7U6bjejaYHnFsO4kYlTLjHyqkHECYNROZmxYp1kd
TpuLgTdOtNIuYqgPdTgZBxZ4KPjAxGBiohus3elw0TtM2q10ueek6SZZzCgt
1kDtlATXITReIss3DI9GSbSEJFI4t9m/+6GEMKQYcxLLTeiGIH6rhC8L+SWt
Viseuftf6P1MUtaIdWfHXiiE7Z8Rq8dJCUUfiNWYelUS6Y4qwV1OgFZkeDF9
LjXYo86HUCGyLhRNgOwMSczKUyd0d5I+osokQwBGH0wGJMQe65qxiqRAPa89
NAdh025+dk6Cc90qJQlDDaDk9jaSmjeT/sdHRuRlaeZNQEHOSXO4AMdoAVaL
ypBpdHN3QBkMNSFy1HMS606gg7YfaFQzbBqZ3U4xeYTNZhUQGzOscaKjB+PW
oAlbwZKTxs3GdNv4adidDvdzkdOA0jxNbSzNjylEMSLASH6N7qjiNzkjJxEn
SfTpdPvJwlJMXI1hwTi9YroiFO3AvGAHACRyN9JtJGgkmfI4MbfFlOjjBrKM
Gwo67qjsQxR9wMOKMmoP3TKJDnTSr2heW3QrNMMkTHwEHGhuN3AexXOMO0sX
QhKmHaExTslPXDRwkFsUzaJji0PIJkBccClnRa2jWRemDOCnf/wLqPtmw/I3
vn3oHwBq8THFGqQc71QmVOgzxyT19bTSPIYwmY3BTEiAmhE89F3iqlwA6m/V
f6KTPvzEqDdJ9SrSdD8iQkrNCOnthFyf4pa0FVMGsQyqmHF+FxZlKNWh4a55
N/DCKZywMNILFp6m94WqyFzAsiJWcxIuCI8Qy3x3miHK0+Kni8yyc3YKDLgY
P1dqxQjzH7DlwPrbkennycxIXeepQpwVQyfM4hGkPonTZmep1Pq2CZ8RjXMA
qBeQ5uveJLFLxYgZC4ud5iRJ9MTHQaYLQ3lwGPjBRcNC08D1BKiFgcwjiyKI
kGmEao6iMeGK3XlWEb8ZDhbENoLVdhr3TUgqR5g7IcoHBsZ3091eWt4+iV4q
omB59mgSL546wvNqTS9iFB6R9rxQA0p7xDkSGFknY7ELNtIOp4Wa5pH+cxGI
sZGkThQGbyIj4twvmpuB5BxvNpqQfaZP4aJxPxwUsYRk8YhYmF9GeByhDgkS
SnIA8cgw0zxfgLoifqErDQY5EZ16SK+5GPFJcfjQG2GzeaFTaQ4ylJyQcM5o
tMnx0pgDOPKkPS/qAsTLqByPRoulduhEmcITS+lpHMLUP9OgnptWZl1/pzlq
6CLgqHkJUM98dx76LiSV7uKRBdSf7kExbbqhRHGYE5hqHK30Ul50FUTxsju9
CMejWM8dFxm/biFOCGunmiAS60P0dHYyYm5cej+Unc7que8hXvft0Ewcnv7v
HNfzfJeyW1BRufNCig4vIlALUQQZFp09GWrWywlsKmUX0RiS6tdQRzaDo5vR
SH7W9ymYajPsQF//iHkU4BrIaNQbTVqTWac3DhnNBtOwWW80GIxm8/CoVgdn
zQb4T0+KyWA0AS/uLqMjZqNBJ/xrMg0PDxuNtMZhqFGH+wadfnR4hJgX6sg1
aCtILjGZSW1wUKeHs0ZCZjis1erN5pFhuLVWD7UOm0ZMBjPumI3Deq2O1gM3
Muv15CdwMW0hvSv930AJG4N2ifQZoXYDPJnBOGQehp8O6YfhhNEgnKGNMZBf
QDEYdPBcZEueWVrwekJ4PbbNeIcIGo/Nhm/DI/q4fZJ2YB2l2tra+vr6uoVD
CoUC2tzY2IhbPNLQUFddXd3Q1Kioa6iprbtao2hobFEo4LngTKOiRnhGOAAX
1MKmVtHYAAdqaxRXqxW1NfUNitqm+tpriromuKahsbamrqq2sQbONtRdq1c0
wb2amuGOVxWKGqiqpqamsb6hXgEVkKqgonpK9Ba1UOa1h+YmaF5DQ4P4rmG/
qalJtNy4yTejUqmkyy7+W5h0zi0RnZrF7uxExvJ3vs5vQd+32EvKKt9zxEnU
vgMDAxIO6jvU4IF3D92E5hpwwspxPppzbxHaUet0Oo1Gg+Hs+vv7NfNHvTeg
eWySh4CAi9bQt6PVamEhIH483/5L8wC1hzx0OySaXvCztLce8hCS+EmIIVlu
QZ/o+a485KHbIXEEzdBuzEtL5qT5ao+HkKRa0fltiYc89AOk/wdGhGzv
    "], {{0, 148}, {
    483, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
    True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{483, 148},
  PlotRange->{{0, 483}, {0, 148}}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.7367046498340807`*^9, {3.736882273548814*^9, 3.736882273937325*^9}, {
   3.736882678983438*^9, 3.736882681164237*^9}, 3.740232730403053*^9, 
   3.740243639896044*^9, 3.740244487330308*^9, 3.740244549220659*^9, 
   3.7402446960768766`*^9, 
   3.740246076693166*^9},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell[TextData[{
 "We have ",
 StyleBox["designed package structure and features",
  FontWeight->"Bold"],
 " that have to be applied to all its functions, their titles and  options. \
We have created algorithms and respective codes that solve problems of ",
 StyleBox["Nash equilibrium",
  FontWeight->"Bold"],
 " set finding, as well as ",
 StyleBox["MaxMin",
  FontWeight->"Bold"],
 " solutions computing. We have also programmed the code that solves \
two-matrix mixed strategy games. The package includes, withal, a function \
that ",
 StyleBox["plot Nash equilibrium set",
  FontWeight->"Bold"],
 " in 2\[Cross]2 mixed strategy games."
}], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{
  3.7368810316239147`*^9, {3.7402328718951197`*^9, 3.7402328787142525`*^9}, {
   3.7402331438937893`*^9, 3.7402331982846813`*^9}, {3.740233232958108*^9, 
   3.74023329183132*^9}, {3.7402333262389855`*^9, 3.7402333484097977`*^9}, {
   3.7402333934895763`*^9, 3.7402334391040974`*^9}, {3.7402334963321633`*^9, 
   3.740233582832507*^9}, {3.7402336477076683`*^9, 3.7402339163480854`*^9}, {
   3.740233949676225*^9, 3.740234157660057*^9}, {3.7402341919564304`*^9, 
   3.740234241879661*^9}, {3.7402343125874796`*^9, 3.740234418956983*^9}, {
   3.740234469722748*^9, 3.7402344894250464`*^9}, {3.7402345352545123`*^9, 
   3.740234640190816*^9}, {3.7402346997705603`*^9, 3.740234734597178*^9}, {
   3.740234809161309*^9, 3.740235140149041*^9}, {3.740236752629522*^9, 
   3.7402367749261656`*^9}, {3.7402426027086506`*^9, 
   3.7402426035058317`*^9}, {3.7402427817006364`*^9, 3.740242787885435*^9}, {
   3.7402428464111013`*^9, 3.740242881876341*^9}, {3.740245164816147*^9, 
   3.740245183898782*^9}},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell[TextData[{
 "We intend to develop the package in several successive stages and \
directions.\nAt the ",
 StyleBox["first initiation stage",
  FontWeight->"Bold"],
 " we plan to enlarge the number of strategic form game theory problems \
solved by the package, and to include more plotting possibilities.  At the",
 StyleBox[" second stage",
  FontWeight->"Bold"],
 " we intend to develop package functionality in order to solve extensive \
form games, and to include their abundant plotting functionality.  At the ",
 StyleBox["third stage",
  FontWeight->"Bold"],
 ", we are considering adding support for cooperative games.  At the",
 StyleBox[" fourth stage",
  FontWeight->"Bold"],
 ", we plan to consider differential games and control. ",
 StyleBox["Next stages ",
  FontWeight->"Bold"],
 "will include multi-criteria mixtures of simultaneous and sequential games, \
as well as a lot of applied problems from all the human activity."
}], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536768881929*^9, {3.7367072121682987`*^9, 3.736707214173369*^9}, {
   3.740235215409969*^9, 3.7402353082694974`*^9}, {3.740235349706644*^9, 
   3.7402354226301727`*^9}, {3.74023548614824*^9, 3.7402355613642206`*^9}, {
   3.740235592410593*^9, 3.7402360041594996`*^9}, {3.74023604594153*^9, 
   3.7402360741289196`*^9}, {3.7402361443003125`*^9, 
   3.7402362679565086`*^9}, {3.7402363702539935`*^9, 
   3.7402364784881687`*^9}, {3.7402365116451015`*^9, 
   3.7402366370816727`*^9}, {3.74023667162842*^9, 3.7402367152693405`*^9}, {
   3.7402368158313074`*^9, 3.7402368191754923`*^9}, {3.740243156656863*^9, 
   3.7402431795863776`*^9}, {3.740245416020055*^9, 3.740245458507213*^9}, {
   3.7402455891337905`*^9, 
   3.7402455955455446`*^9}},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 2], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"2f09c4c1-886c-4a07-bdd0-f7e9c2bd843a"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7401549957986803`*^9},ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-\
c12593f67d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188003855814*^9},
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.738720159560079*^9},ExpressionUUID->"a415c0fc-f692-474a-a3a1-\
95fb4df9ef20"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The Package Concept",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "TemplateEditableHeader",
 CellChangeTimes->{{3.7402482126596518`*^9, 3.7402482206967335`*^9}, {
  3.7402489370554976`*^9, 3.740248937772813*^9}, {3.740249021491536*^9, 
  3.7402490229516377`*^9}},ExpressionUUID->"d071ce64-acbc-43ae-b7f0-\
c17c69d05e3e"],

Cell["\<\
The function GameTheory[] realises package main functionality. Types of games \
and concepts, initial data and options are specified as arguments and options.\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.740248023118701*^9},ExpressionUUID->"8c746bec-c005-4af8-addc-\
0e2edbbcfd33"],

Cell[TextData[StyleBox["Data initialization:", "CodeText"]], \
"TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402483112442493`*^9, 
  3.7402483165169764`*^9}},ExpressionUUID->"52354b08-8840-4bcd-908b-\
8fec4f322c18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "4"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5", ",", "7"}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{3.7402498976892447`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"3713dfaf-34f1-464f-8501-63d758a1d9a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "2", "3"},
       {"7", "2", "2"},
       {"1", "1", "4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "1"},
       {"5", "2", "3"},
       {"3", "5", "7"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.740249899368582*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"544bb3c4-470e-4187-85ff-06bdaf70a4fc"]
}, Open  ]],

Cell[TextData[StyleBox["Find for 2-matrix pure strategy games MaxMin \
solution:", "CodeText"]], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402484122567234`*^9, 
  3.7402484197520704`*^9}},ExpressionUUID->"f047eb35-347d-4f7a-b4fb-\
3d89c1936c30"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"GameTheory", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Criteria\>\"", "->", "\"\<Maximize\>\""}], ",", 
       RowBox[{"\"\<Concept\>\"", "->", "\"\<MaxMin\>\""}], ",", 
       RowBox[{"\"\<Strategy\>\"", "->", "\"\<Pure\>\""}]}], "}"}]}]}], 
   "]"}]], "Input",
  CellChangeTimes->{{3.73995048524233*^9, 3.7399504910431457`*^9}, {
   3.740048816086749*^9, 3.740048901154687*^9}, {3.7400493276805344`*^9, 
   3.740049395300505*^9}},ExpressionUUID->
  "ee893ad4-848d-4aba-87af-1d5171fe5557"],
 "\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Player 1\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Strategy\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], ",", 
       RowBox[{"\<\"Payoff\"\>", "\[Rule]", "2"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Player 2\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Strategy\"\>", "\[Rule]", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{"\<\"Payoff\"\>", "\[Rule]", "3"}]}], 
      "\[RightAssociation]"}]}]}], "}"}]], "Output",
  CellChangeTimes->{
   3.7401334197754745`*^9, 3.740140093971568*^9, 3.7401427640322676`*^9, 
    3.740142810400707*^9, 3.7401453955315733`*^9, {3.7401455215866694`*^9, 
    3.740145538480607*^9}, 3.7401570557831306`*^9, 3.740157091144044*^9, 
    3.7401574592084484`*^9, 3.740167191889547*^9, 3.740246887274551*^9},
  ExpressionUUID->"b9a4fde3-e407-49f7-a7ae-a2fa7ba74db2"]
}], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402484122567234`*^9, 
  3.740248420942601*^9}},ExpressionUUID->"65ff7cce-7acc-4056-b8f7-\
440fd358ce74"],

Cell[TextData[StyleBox["Find for 2-matrix pure strategy games pure Nash \
equilibria:", "CodeText"]], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740248468018945*^9, 
  3.7402484734181585`*^9}},ExpressionUUID->"ddb3653c-9a1a-495b-bc8f-\
a964bc51f07f"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"GameTheory", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Criteria\>\"", "->", "\"\<Maximize\>\""}], ",", 
       RowBox[{"\"\<Concept\>\"", "->", "\"\<NashEquilibrium\>\""}], ",", 
       RowBox[{"\"\<Strategy\>\"", "->", "\"\<Pure\>\""}]}], "}"}]}]}], 
   "]"}]], "Input",
  CellChangeTimes->{{3.7398284980746517`*^9, 3.739828499647175*^9}, {
   3.740049687074382*^9, 3.740049715541912*^9}},ExpressionUUID->
  "55f1e731-a87f-4d1b-be0c-0d178a23c84a"],
 "\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Player 1\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"Player 2\"\>", "\[Rule]", "2"}]}], 
      "\[RightAssociation]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Player 1\"\>", "\[Rule]", "2"}], ",", 
       RowBox[{"\<\"Player 2\"\>", "\[Rule]", "1"}]}], 
      "\[RightAssociation]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5"}], "}"}]}], ",", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Player 1\"\>", "\[Rule]", "3"}], ",", 
       RowBox[{"\<\"Player 2\"\>", "\[Rule]", "3"}]}], 
      "\[RightAssociation]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}]}]}], "}"}]], "Output",
  CellChangeTimes->{{3.7400496678079658`*^9, 3.740049716416874*^9}, 
    3.7400777419185896`*^9, 3.740078060270897*^9, 3.7400782106432962`*^9, 
    3.740078422338024*^9, 3.7400798376289225`*^9, 3.7400801979203854`*^9, 
    3.740083068381427*^9, {3.7401318353351545`*^9, 3.7401318441257467`*^9}, 
    3.7401337548217373`*^9, 3.740134501376075*^9, 3.740140096734865*^9, 
    3.740142766235324*^9, 3.7401428135578146`*^9, 3.7401453975627604`*^9, {
    3.740145523446539*^9, 3.740145540668526*^9}, 3.740157058987726*^9, 
    3.7401570938800898`*^9, 3.740157461865658*^9, 3.7401671984684896`*^9, 
    3.7402468896607914`*^9},ExpressionUUID->
  "53a28622-5918-4253-a555-5fe2b69cdf40"]
}], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740248468018945*^9, 
  3.74024847437457*^9}},ExpressionUUID->"38d71370-37a2-43ff-b044-\
18151924a642"],

Cell["Find for 2-matrix pure strategy games Mixed Nash equilibria:", \
"CodeText",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740248513924617*^9, 
  3.7402485176832895`*^9}},ExpressionUUID->"88981867-650c-42d0-8841-\
7b6cc5815daf"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"GameTheory", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Criteria\>\"", "->", "\"\<Maximize\>\""}], ",", 
       RowBox[{"\"\<Concept\>\"", "->", "\"\<NashEquilibrium\>\""}], ",", 
       RowBox[{"\"\<Strategy\>\"", "->", "\"\<Mixed\>\""}]}], "}"}]}]}], 
   "]"}]], "Input",
  CellChangeTimes->{{3.7400530811731157`*^9, 3.740053084954986*^9}},
  ExpressionUUID->"81e1639d-49de-430e-9d7e-7e3535d1c64d"],
 "\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["3", "4"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "4"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", 
          RowBox[{"ConditionalExpression", "[", 
           RowBox[{
            RowBox[{"1", "-", 
             TemplateBox[{"\[FormalX]","2"},
              "IndexedDefault"]}], ",", 
            RowBox[{"0", "\[LessEqual]", 
             TemplateBox[{"\[FormalX]","2"},
              "IndexedDefault"], "\[LessEqual]", 
             FractionBox["1", "4"]}]}], "]"}]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", 
          RowBox[{"ConditionalExpression", "[", 
           RowBox[{"0", ",", 
            RowBox[{"0", "\[LessEqual]", 
             TemplateBox[{"\[FormalX]","2"},
              "IndexedDefault"], "\[LessEqual]", 
             FractionBox["1", "4"]}]}], "]"}]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["2", "7"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["5", "7"]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "2"]}]}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["4", "17"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["6", "17"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["7", "17"]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "10"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["2", "5"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "2"]}]}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "1"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", "0"}]}], "}"}], "}"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["2", "3"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "3"]}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["1", "4"]}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", 
          FractionBox["3", "4"]}]}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalX]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalX]","3"},
           "IndexedDefault"], "\[Rule]", "1"}]}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{"\[FormalY]","1"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","2"},
           "IndexedDefault"], "\[Rule]", "0"}], ",", 
         RowBox[{
          TemplateBox[{"\[FormalY]","3"},
           "IndexedDefault"], "\[Rule]", "1"}]}], "}"}], "}"}]}], "}"}]}], 
   "}"}]], "Output",
  CellChangeTimes->{
   3.7400538503378334`*^9, 3.7400539184959373`*^9, {3.740054021755642*^9, 
    3.740054030713041*^9}, 3.740054315035725*^9, 3.740054354480222*^9, 
    3.7400548764972115`*^9, 3.74005492994611*^9, 3.740054964853361*^9, 
    3.7400624687800303`*^9, 3.7400798453944855`*^9, 3.7401345070925565`*^9, 
    3.7401400995191526`*^9, 3.740142768876258*^9, 3.7401428168863783`*^9, 
    3.740145400172858*^9, {3.74014552951023*^9, 3.7401455428720603`*^9}, 
    3.740157066212971*^9, 3.740157096975255*^9, 3.740157465585953*^9, 
    3.7401672019378805`*^9, 3.740246896161137*^9},ExpressionUUID->
  "9dd9cfd1-a21d-491f-aefe-6370f426a90d"]
}], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740248513924617*^9, 
  3.740248518653694*^9}},ExpressionUUID->"70df1d5f-6427-45dc-95b4-\
66acd2ed69fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Plotting the set of Nash equilibria",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "TemplateEditableHeader",
 CellChangeTimes->{{3.7402472129965806`*^9, 3.7402472726023583`*^9}, {
  3.740248967160843*^9, 
  3.7402489746771765`*^9}},ExpressionUUID->"d81a2f92-5f84-4614-aee9-\
dcb6b7eeac79"],

Cell["\<\
For some particular games it is possible to represent graphically set of Nash \
equilibria.\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740243392104905*^9, 3.7402434261820536`*^9}, 
   3.740246484168962*^9, {3.740246536100625*^9, 3.740246705383192*^9}, {
   3.7402473454906416`*^9, 
   3.7402473870463867`*^9}},ExpressionUUID->"d21a145f-c3c1-4df6-8bea-\
c67ea8fcb0f4"],

Cell["Data initialization:", "CodeText",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7402486127424126`*^9, 
  3.7402486151356845`*^9}},ExpressionUUID->"3b501bf8-19eb-4cbb-9490-\
405b1c1f7e6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]}]}], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{3.740249939433589*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"097a7bc4-f7aa-49cf-9b89-131c3c12d0a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "3"},
       {"7", "2"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "6"},
       {"5", "3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7402499416111174`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"541590da-0111-401a-80b0-38d1972d3ebe"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"GameTheoryPlot", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7400657756068907`*^9, 3.7400658355660024`*^9}, {
   3.7400658760244074`*^9, 3.7400658869577646`*^9}, 3.740067531106934*^9, {
   3.7400681062541084`*^9, 3.740068196086917*^9}, {3.7400684076089954`*^9, 
   3.7400684092186546`*^9}, {3.740157151681362*^9, 3.7401571635501657`*^9}, {
   3.7402476058614225`*^9, 
   3.7402476084932356`*^9}},ExpressionUUID->"d19c2125-e0ab-4ce0-9659-\
2e912bb14ae8"]], "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402486598652277`*^9},ExpressionUUID->"fe13a970-665e-4f73-8b99-\
08b097990b95"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{GameTheory`Private`a11$$ = 5, GameTheory`Private`a12$$ = 
    3, GameTheory`Private`a21$$ = 7, GameTheory`Private`a22$$ = 2, 
    GameTheory`Private`b11$$ = 3, GameTheory`Private`b12$$ = 6, 
    GameTheory`Private`b21$$ = 5, GameTheory`Private`b22$$ = 3, 
    GameTheory`Private`NonAntagonistic$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["Matrix A", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[GameTheory`Private`a11$$], 5, 
       "\!\(\*SubscriptBox[\(a\), \(11\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a12$$], 3, 
       "\!\(\*SubscriptBox[\(a\), \(12\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a21$$], 7, 
       "\!\(\*SubscriptBox[\(a\), \(21\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a22$$], 2, 
       "\!\(\*SubscriptBox[\(a\), \(22\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`NonAntagonistic$$], True, "NonAntagonistic"}, {
      True, False}}, {
      Hold[
       Style["Matrix B", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[GameTheory`Private`b11$$], 3, 
       "\!\(\*SubscriptBox[\(b\), \(11\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b12$$], 6, 
       "\!\(\*SubscriptBox[\(b\), \(12\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b21$$], 5, 
       "\!\(\*SubscriptBox[\(b\), \(21\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b22$$], 3, 
       "\!\(\*SubscriptBox[\(b\), \(22\)]\)"}, -10, 10, 1}, {
      Hold[
       Style["Matrices A and B", Bold]], Manipulate`Dump`ThisIsNotAControl}, {
     
      Hold[
       Dynamic[
        TableForm[{{
           StringJoin[
            ToString[GameTheory`Private`a11$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b11$$, 
              GameTheory`Private`b11$$ = -GameTheory`Private`a11$$]]], 
           StringJoin[
            ToString[GameTheory`Private`a12$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b12$$, 
              GameTheory`Private`b12$$ = -GameTheory`Private`a12$$]]]}, {
           StringJoin[
            ToString[GameTheory`Private`a21$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b21$$, 
              GameTheory`Private`b21$$ = -GameTheory`Private`a21$$]]], 
           StringJoin[
            ToString[GameTheory`Private`a22$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b22$$, 
              GameTheory`Private`b22$$ = -GameTheory`Private`a22$$]]]}}, 
         TableHeadings -> {{"1", "2"}, {"  1", "  2"}}, 
         TableSpacing -> {2, 2}]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {300., {186.5, 192.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    GameTheory`Private`a11$4289$$ = 0, GameTheory`Private`a12$4290$$ = 0, 
    GameTheory`Private`a21$4291$$ = 0, GameTheory`Private`a22$4292$$ = 0, 
    GameTheory`Private`NonAntagonistic$4293$$ = False, 
    GameTheory`Private`b11$4294$$ = 0, GameTheory`Private`b12$4295$$ = 0, 
    GameTheory`Private`b21$4296$$ = 0, GameTheory`Private`b22$4297$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       GameTheory`Private`a11$$ = 5, GameTheory`Private`a12$$ = 3, 
        GameTheory`Private`a21$$ = 7, GameTheory`Private`a22$$ = 2, 
        GameTheory`Private`b11$$ = 3, GameTheory`Private`b12$$ = 6, 
        GameTheory`Private`b21$$ = 5, GameTheory`Private`b22$$ = 3, 
        GameTheory`Private`NonAntagonistic$$ = True}, "ControllerVariables" :> {
        Hold[GameTheory`Private`a11$$, GameTheory`Private`a11$4289$$, 0], 
        Hold[GameTheory`Private`a12$$, GameTheory`Private`a12$4290$$, 0], 
        Hold[GameTheory`Private`a21$$, GameTheory`Private`a21$4291$$, 0], 
        Hold[GameTheory`Private`a22$$, GameTheory`Private`a22$4292$$, 0], 
        Hold[
        GameTheory`Private`NonAntagonistic$$, 
         GameTheory`Private`NonAntagonistic$4293$$, False], 
        Hold[GameTheory`Private`b11$$, GameTheory`Private`b11$4294$$, 0], 
        Hold[GameTheory`Private`b12$$, GameTheory`Private`b12$4295$$, 0], 
        Hold[GameTheory`Private`b21$$, GameTheory`Private`b21$4296$$, 0], 
        Hold[GameTheory`Private`b22$$, GameTheory`Private`b22$4297$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Graphics[{Thick, Blue, 
            GameTheory`Private`g1[
            GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
             GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
             GameTheory`Private`a12$$ - GameTheory`Private`a22$$], Green, 
            GameTheory`Private`g2[
            GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
             GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
             GameTheory`Private`b21$$ - GameTheory`Private`b22$$], Red, 
            PointSize[Large], 
            GameTheory`Private`nes[
            GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
             GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
             GameTheory`Private`a12$$ - GameTheory`Private`a22$$, 
             GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
             GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
             GameTheory`Private`b21$$ - GameTheory`Private`b22$$]}, 
           PlotRange -> {{0, 1}, {0, 1}}, Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(x\), \(1\)]\)", 
             "\!\(\*SubscriptBox[\(y\), \(1\)]\)"}, 
           ImageSize -> {300, 300}]}, {" "}, {
          Text[
           Style["Reference Nash Equilibria", Bold]]}, {
          Text[
           Style[
            Part[
             GameTheory`Private`nes[
             GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
              GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
              GameTheory`Private`a12$$ - GameTheory`Private`a22$$, 
              GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
              GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
              GameTheory`Private`b21$$ - GameTheory`Private`b22$$], 1, 1], 
            Bold]]}}, ItemSize -> {Automatic, {10, 1, 1, 3}}, 
        Alignment -> {Center, Top}], "Specifications" :> {
        Style[
        "Matrix A", Bold], {{
         GameTheory`Private`a11$$, 5, 
          "\!\(\*SubscriptBox[\(a\), \(11\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a12$$, 3, 
          "\!\(\*SubscriptBox[\(a\), \(12\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a21$$, 7, 
          "\!\(\*SubscriptBox[\(a\), \(21\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a22$$, 2, 
          "\!\(\*SubscriptBox[\(a\), \(22\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, 
        Delimiter, {{
         GameTheory`Private`NonAntagonistic$$, True, "NonAntagonistic"}, {
         True, False}}, Delimiter, 
        Style[
        "Matrix B", Bold], {{
         GameTheory`Private`b11$$, 3, 
          "\!\(\*SubscriptBox[\(b\), \(11\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b12$$, 6, 
          "\!\(\*SubscriptBox[\(b\), \(12\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b21$$, 5, 
          "\!\(\*SubscriptBox[\(b\), \(21\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b22$$, 3, 
          "\!\(\*SubscriptBox[\(b\), \(22\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, Delimiter, 
        Style["Matrices A and B", Bold], 
        Dynamic[
         TableForm[{{
            StringJoin[
             ToString[GameTheory`Private`a11$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b11$$, 
               GameTheory`Private`b11$$ = -GameTheory`Private`a11$$]]], 
            StringJoin[
             ToString[GameTheory`Private`a12$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b12$$, 
               GameTheory`Private`b12$$ = -GameTheory`Private`a12$$]]]}, {
            StringJoin[
             ToString[GameTheory`Private`a21$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b21$$, 
               GameTheory`Private`b21$$ = -GameTheory`Private`a21$$]]], 
            StringJoin[
             ToString[GameTheory`Private`a22$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b22$$, 
               GameTheory`Private`b22$$ = -GameTheory`Private`a22$$]]]}}, 
          TableHeadings -> {{"1", "2"}, {"  1", "  2"}}, 
          TableSpacing -> {2, 2}]]}, "Options" :> {}, "DefaultOptions" :> {}],
     
     ImageSizeCache->{577., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({GameTheory`Private`g1[
         Pattern[GameTheory`Private`\[Alpha], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Alpha]0, 
          Blank[]]] := Piecewise[{{
           Rectangle[{0, 0}, {1, 1}], 
           And[
           GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           Line[{{1, 0}, {1, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
             0], 
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
             0]]}, {
           Line[{{0, 0}, {0, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
             0], 
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
             0]]}, {
           Line[{{0, 0}, {1, 0}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           
           Line[{{0, 0}, {
             0, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {
             1, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0]}, {
           Line[{{0, 0}, {0, 1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
            0]}, {
           Line[{{1, 0}, {0, 0}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           
           Line[{{1, 0}, {
             1, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {
             0, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0]}, {
           Line[{{1, 0}, {1, 1}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
            0]}}], GameTheory`Private`g2[
         Pattern[GameTheory`Private`\[Beta], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta]0, 
          Blank[]]] := Piecewise[{{
           Rectangle[{0, 0}, {1, 1}], 
           And[
           GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           Line[{{0, 1}, {1, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]]}, {
           Line[{{0, 0}, {1, 0}}], 
           Or[
            And[
            GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]]}, {
           Line[{{0, 0}, {0, 1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           
           Line[{{0, 
             0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]}, {
           Line[{{0, 0}, {1, 0}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]}, {
          
           Line[{{0, 1}, {0, 0}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           
           Line[{{0, 
             1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              0}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]}, {
           Line[{{0, 1}, {1, 1}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]}}],
        GameTheory`Private`nes[
         Pattern[GameTheory`Private`\[Alpha], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Alpha]0, 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta]0, 
          Blank[]]] := Piecewise[{{{
            Point[{{0, 0}, {1, 0}, {1, 1}, {0, 1}}], 
            Rectangle[{0, 0}, {1, 1}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            Point[{{0, 1}, {1, 1}}], 
            Line[{{0, 1}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{{0, 0}, {1, 0}}], 
            Line[{{0, 0}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {0, 1}, {1, 1}}], 
            Line[{{0, 0}, {0, 1}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[
             Part[
              GameTheory`Private`g2[
              GameTheory`Private`\[Beta], GameTheory`Private`\[Beta]0], 1]], 
            GameTheory`Private`g2[
            GameTheory`Private`\[Beta], GameTheory`Private`\[Beta]0]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
              0]]]}, {{
            Point[{{0, 0}, {1, 0}, {1, 1}}], 
            Line[{{0, 0}, {1, 0}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{0, 1}, {0, 0}, {1, 0}}], 
            Line[{{0, 1}, {0, 0}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{0, 1}, {1, 1}, {1, 0}}], 
            Line[{{0, 1}, {1, 1}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{1, 0}, {1, 1}}], 
            Line[{{1, 0}, {1, 1}}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{1, 1}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{1, 0}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {0, 1}}], 
            Line[{{0, 0}, {0, 1}}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{0, 1}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{0, 0}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 1}}], 
            Line[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                0}, {1, 0}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            Point[
             Part[
              GameTheory`Private`g1[
              GameTheory`Private`\[Alpha], GameTheory`Private`\[Alpha]0], 1]], 
            GameTheory`Private`g1[
            GameTheory`Private`\[Alpha], GameTheory`Private`\[Alpha]0]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 0}, {
              1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}], 
            
            Line[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
              0]]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}], 
            
            Line[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}], 
            
            Line[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                0}, {1, 0}, {0, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            Point[{{1, 0}, {0, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}], 
            
            Line[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}, {1, 0}}], 
            
            Line[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}, {0, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                1}, {1, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 0}}], 
            
            Line[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}}], Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402488424295564`*^9, {3.740250330162938*^9, 3.740250334433402*^9}, 
   3.740250621013627*^9},ExpressionUUID->"8b164e22-160f-4cce-92da-\
f328c0de4c0f"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"de93efd8-12a9-4f5c-8a79-b815d24ac5f9"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.740224343432857*^9},ExpressionUUID->"01c4256e-42d0-42b4-b6a6-\
4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188072178087*^9},
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell[CellGroupData[{

Cell["Main Results in Detail", "Subsubsection",
 CellChangeTimes->{
  3.7361820729365396`*^9},ExpressionUUID->"c1b785be-a60a-40fe-b1f1-\
2d83590b38cd"],

Cell[TextData[{
 "We have ",
 StyleBox["designed package structure and features",
  FontWeight->"Bold"],
 " that have to be applied to all its functions, their titles and  options. \
Main functions of the package are ",
 StyleBox["GameTheory[]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["GameTheoryPlot[]",
  FontWeight->"Bold"],
 ". There is an idea to rename them in ",
 StyleBox["GameSolve[]",
  FontWeight->"Bold"],
 " and ",
 StyleBox["GameSolvePlot[]",
  FontWeight->"Bold"],
 ". Formal parameters of the functions are initial data of the games, as well \
all the concepts that specifies a concrete game theory problem:"
}], "Text",
 CellChangeTimes->{{3.740251254478221*^9, 3.740251262865281*^9}, {
  3.740251300636544*^9, 3.7402514729702177`*^9}, {3.7402515247875257`*^9, 
  3.7402515418846903`*^9}, {3.740310251640865*^9, 
  3.7403102518337007`*^9}},ExpressionUUID->"a2115403-bef9-4fb0-b35e-\
e7e1f428f635"],

Cell["See a piece of code from the package:", "CodeText",
 CellChangeTimes->{{3.740251254478221*^9, 3.740251262865281*^9}, {
  3.740251300636544*^9, 3.7402514729702177`*^9}, {3.7402515247875257`*^9, 
  3.740251571986415*^9}},ExpressionUUID->"96059e12-4c14-4588-a4da-\
fd887e2c0e99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testOptionValue", "[", 
   RowBox[{
    RowBox[{"\"\<Criteria\>\"", "->", "crit"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Maximize\>\"", ",", " ", "\"\<Minimize\>\""}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7402515955053873`*^9},ExpressionUUID->"612eb437-fd71-4282-811c-\
950c1d2318a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testOptionValue", "[", 
   RowBox[{
    RowBox[{"\"\<Strategy\>\"", "->", "type"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Pure\>\"", ",", " ", "\"\<Mixed\>\""}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7402515955053873`*^9, 
  3.7402515980445185`*^9}},ExpressionUUID->"3606dee2-7937-46c8-add1-\
0160821d8228"],

Cell[BoxData[
 RowBox[{"testOptionValue", "[", 
  RowBox[{
   RowBox[{"\"\<Concept\>\"", "->", "concept"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NashEquilibrium\>\"", ",", " ", "\"\<MaxMin\>\"", ",", " ", 
     "\"\<StackelbergEquilibrium\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7402515955053873`*^9, 
  3.740251598722289*^9}},ExpressionUUID->"d8bd525e-68f6-468a-960a-\
9ea6c5e264a5"],

Cell[TextData[{
 "We have created algorithms and respective codes that solve problems of ",
 StyleBox["Nash equilibrium",
  FontWeight->"Bold"],
 " set finding, as well as ",
 StyleBox["MaxMin",
  FontWeight->"Bold"],
 " solutions computing. In this context must be mentioned functions:"
}], "Text",
 CellChangeTimes->{{3.740251254478221*^9, 3.740251277341932*^9}, {
  3.7402516516292305`*^9, 
  3.7402517052909126`*^9}},ExpressionUUID->"97d18cbf-9e89-4f3e-8755-\
da834ab01857"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pureNashEquilibria", "[", "matr_", "]"}], "..."}]], "Input",
 CellChangeTimes->{{3.740251772681909*^9, 
  3.7402517754659595`*^9}},ExpressionUUID->"29d08eaa-f75c-4dbc-a832-\
1cc06613bba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxMin", "[", "matr_", "]"}], "..."}]], "Input",
 CellChangeTimes->{{3.740251802099868*^9, 
  3.7402518024617424`*^9}},ExpressionUUID->"ef52f52d-dce3-4b8c-81b2-\
cfe89091af82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pureStackelbergEquilibria", "[", "matr_", "]"}], "..."}]], "Input",\

 CellChangeTimes->{{3.7402518257527943`*^9, 
  3.740251826125667*^9}},ExpressionUUID->"024aaeef-4985-4c96-9f9e-\
85c7954bb8af"],

Cell["\<\
We have also programmed the code that solves two-matrix mixed strategy games.\
\
\>", "Text",
 CellChangeTimes->{{3.740251254478221*^9, 
  3.7402512851391277`*^9}},ExpressionUUID->"461b1cc8-fe96-4cf2-94dd-\
3dd4841fcb81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mixedNashEquilibria", "[", "m_", "]"}], "..."}]], "Input",Expressio\
nUUID->"9ae59ab1-9d50-41d4-a7ad-82d22d6fa495"],

Cell[TextData[{
 "The package includes, withal, a function that ",
 StyleBox["plot Nash equilibrium set",
  FontWeight->"Bold"],
 " in 2\[Cross]2 mixed strategy games."
}], "Text",
 CellChangeTimes->{{3.740251254478221*^9, 
  3.740251286114902*^9}},ExpressionUUID->"1da16e61-3f0c-4fd4-8a35-\
be33d089fbb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"game2x2Plot", "[", "m_", "]"}], ":=", "..."}]], "Input",
 CellChangeTimes->{
  3.7403107838730993`*^9, {3.740310885060101*^9, 
   3.7403109085503187`*^9}},ExpressionUUID->"a3a81307-6d73-47c5-8d5b-\
d4e00087ac5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{
  3.736182092776252*^9},ExpressionUUID->"6ebeefbd-4857-42fb-a308-\
27aaa279c47f"],

Cell["Provide one of:", "Text",
 CellChangeTimes->{{3.70811356171093*^9, 
  3.7081135645971746`*^9}},ExpressionUUID->"14e3781a-a52e-4548-bf74-\
c0aba980dad1"],

Cell[TextData[ButtonBox["Link to the GitHub",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://github.com/valungureanu/Summer2018Starter/tree/master/\
StudentDeliverables"], None},
 ButtonNote->
  "https://github.com/valungureanu/Summer2018Starter/tree/master/\
StudentDeliverables"]], "Item",
 CellChangeTimes->{{3.7080963065367527`*^9, 3.708096309577277*^9}, {
  3.7402537876845365`*^9, 
  3.7402538022308006`*^9}},ExpressionUUID->"d164cdc3-c8cc-4779-b201-\
e2e8541cd2b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bestResponse", "[", "m_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ind", "=", 
       RowBox[{"indexSets", "[", 
        RowBox[{"Dimensions", "[", 
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"Intersection", "@@", 
      RowBox[{"Table", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Flatten", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Thread", "/@", 
           RowBox[{"Table", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{"i", ",", " ", 
               RowBox[{"All", ":>", 
                RowBox[{"maxPositions", "@", 
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{"player", ",", 
                    RowBox[{"Sequence", "@@", "i"}]}], "]"}], "]"}]}]}], ",", 
               " ", 
               RowBox[{"{", "1", "}"}]}], "]"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Tuples", "[", 
                RowBox[{"ind", "[", 
                 RowBox[{"[", "player", "]"}], "]"}], "]"}]}], "}"}]}], "\n", 
            "\t\t\t", "]"}]}], ",", "\n", "\t\t\t", "1"}], "\n", "\t\t", 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"player", ",", " ", 
          RowBox[{"Length", "[", "m", "]"}]}], "}"}]}], "\n", "\t", "]"}]}]}],
     "\n", "]"}]}], "\n"}]], "Code",
 CellChangeTimes->{
  3.7402546883294992`*^9},ExpressionUUID->"8a357d25-a473-4c3d-8902-\
c921d7852b23"],

Cell[TextData[{
 "Theoretical foundation for the code is explained in the next compartment. \
The notation ",
 StyleBox["m",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is for  payoff matrices of the players. ",
 StyleBox["Length[m]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " gives the number of players. ",
 StyleBox["Tuples[] ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "gives all possible tuples formed by player strategies. ",
 StyleBox["maxPositions[]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " gives positions on which maximal values are obtained. The intersection of \
all ",
 StyleBox["Length[m]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " lists of players offers the set of Nash equilibria."
}], "Text",
 CellChangeTimes->{{3.740256943285722*^9, 3.7402569964652014`*^9}, {
  3.740257031457638*^9, 3.7402570517257404`*^9}, {3.74025709215744*^9, 
  3.7402573671824627`*^9}, {3.7402574049915924`*^9, 3.7402574484084787`*^9}, {
  3.7402575349606647`*^9, 
  3.74025754930917*^9}},ExpressionUUID->"0421fcf6-3ae2-4443-a29c-\
68e68af0a29f"],

Cell["\<\
Next function is used for computing MaxMin strategies. This concept more \
simple in comparison with the Nash equilibrium. It needs finding for every \
fixed strategy of the player the worst response of the other players. After \
knowing all such worst responses, every player computes the best from them.\
\>", "Text",
 CellChangeTimes->{{3.7402580200531497`*^9, 
  3.7402582433929405`*^9}},ExpressionUUID->"0178c1c3-fa03-4b81-a617-\
eef69ed88918"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", " ", "MaxMin"}]}]}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"strategies", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{
   RowBox[{"maxMin", "[", "matr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", "=", 
        RowBox[{"Dimensions", "[", 
         RowBox[{"matr", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "min", ",", " ", 
       "ind", ",", " ", "tuples", ",", " ", "payoffTuples"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "matr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
        "has", " ", "the", " ", "same", " ", "dimensions", " ", "as", " ", 
        "all", " ", "other", " ", 
        RowBox[{"m", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        ",", "...", ",", 
       RowBox[{"m", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}]}], 
      "*)"}], "\n", "\t", 
     RowBox[{"Table", "[", "\n", "\t    ", 
      RowBox[{
       RowBox[{
        RowBox[{"min", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"dim", "[", 
            RowBox[{"[", "player", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"Do", "[", "\n", "\t\t    ", 
         RowBox[{
          RowBox[{
           RowBox[{"ind", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"dim", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Length", "[", "matr", "]"}]}], "}"}]}], "]"}]}], ";",
            "                ", 
           RowBox[{"(*", " ", 
            RowBox[{"list", " ", "of", " ", "strategy", " ", "sets"}], " ", 
            "*)"}], "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"ind", "[", 
             RowBox[{"[", "player", "]"}], "]"}], "=", 
            RowBox[{"{", "str", "}"}]}], ";", 
           "                                         ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "strategy", " ", "set", " ", "of", " ", "the", " ", "player", " ",
              "is", " ", "set", " ", "simply", " ", "formed", " ", "by", " ", 
             "one", " ", 
             RowBox[{"element", ":", " ", 
              RowBox[{"{", "str", "}"}]}]}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"tuples", "=", 
            RowBox[{"Tuples", "[", "ind", "]"}]}], ";", 
           "                                           ", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "the", " ", "tuples"}], " ", "*)"}], 
           "\n", "\t\t\t", 
           RowBox[{"payoffTuples", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"matr", "[", 
               RowBox[{"[", 
                RowBox[{"player", ",", 
                 RowBox[{"Sequence", "@@", "t"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tuples"}], "}"}]}], "]"}]}], ";", "   ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "the", " ", "variable", " ", "player", " ", "gives", " ", "the", 
              " ", "matrix", " ", "of", " ", "the", " ", "player"}], ";", " ", 
             RowBox[{
             "other", " ", "indeces", " ", "give", " ", "the", " ", "payoff", 
              " ", "value"}]}], " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"min", "[", 
             RowBox[{"[", "str", "]"}], "]"}], "=", 
            RowBox[{"Min", "[", "payoffTuples", "]"}]}]}], ",", 
          "                                 ", 
          RowBox[{"(*", " ", 
           RowBox[{"for", " ", "every", " ", "player"}], " ", "*)"}], "\n", 
          "\t\t ", 
          RowBox[{"{", 
           RowBox[{"str", ",", 
            RowBox[{"dim", "[", 
             RowBox[{"[", "player", "]"}], "]"}]}], "}"}]}], "\n", "\t\t", 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<Player \>\"", "<>", 
          RowBox[{"ToString", "[", "player", "]"}]}], " ", "->", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Strategy\>\"", "->", 
            RowBox[{"maxPositions", "[", "min", "]"}]}], ",", 
           RowBox[{"\"\<Payoff\>\"", "->", 
            RowBox[{
             RowBox[{"min", "[", 
              RowBox[{"[", 
               RowBox[{"maxPositions", "[", "min", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}]}], ",", "\n", "\t ", 
       RowBox[{"{", 
        RowBox[{"player", ",", 
         RowBox[{"Length", "[", "matr", "]"}]}], "}"}]}], "\n", "\t", "]"}]}],
     "\n", "]"}]}]}]], "Code",ExpressionUUID->"63234d39-6f23-4a76-8c59-\
cb0ae23c0f8f"],

Cell[TextData[{
 "Remark that variable ",
 StyleBox["matr",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is for matrices, as in the above code."
}], "Text",
 CellChangeTimes->{{3.7402582866240897`*^9, 
  3.740258387854909*^9}},ExpressionUUID->"87420e1e-0c73-4c4d-8095-\
155423d90066"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mixedNashEquilibria", "[", "m_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"m", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\n", "  ", 
    RowBox[{
     RowBox[{"NESet", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", "\n", "  ", 
     RowBox[{"Do", "[", "\n", "     ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[DoubleStruckCapitalU]", "=", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "a", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "        ", 
        
        RowBox[{"Do", "[", "\n", "              ", 
         RowBox[{
          RowBox[{"Do", "[", "\n", "                  ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{
                 "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", ",", 
                  RowBox[{"{", "}"}]}], "]"}], "==", "0"}], ",", "Break", ",",
                "Continue"}], "]"}], ";", "\n", "                  ", 
             RowBox[{"\[DoubleStruckCapitalV]", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "a", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\n", 
             "                       ", 
             RowBox[{
             "Do", "[", "                                            ", "\n", 
              "                            ", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{
                    "a", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], "!=", "0"}], "&&", 
                  RowBox[{
                   RowBox[{"X", "[", 
                    RowBox[{
                    "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], "!=", "0"}]}], 
                 ",", "\n", "                                      ", 
                 RowBox[{"NESet", "=", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"NESet", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"XOut", "[", 
                    RowBox[{
                    "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], ",", 
                    RowBox[{"YOut", "[", 
                    RowBox[{
                    "a", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}]}], "}"}]}], 
                   "]"}]}], ",", "\n", 
                 "                                      ", "Break"}], "\n", 
                "                             ", "]"}], ",", "\n", 
               "                        ", 
               RowBox[{"{", 
                RowBox[{"\[DoubleStruckCapitalJ]", ",", 
                 RowBox[{"Subsets", "[", "\[DoubleStruckCapitalV]", "]"}]}], 
                "}"}]}], "\n", "                       ", "]"}]}], ",", "\n", 
            "               ", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "a", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\n", 
           "              ", "]"}], ",", "\n", "         ", 
          RowBox[{"{", 
           RowBox[{"\[DoubleStruckCapitalI]", ",", 
            RowBox[{"Subsets", "[", "\[DoubleStruckCapitalU]", "]"}]}], 
           "}"}]}], "\n", "        ", "]"}]}], ",", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "a", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "\n", "  ", "]"}], ";", 
     "\n", "  ", 
     RowBox[{"DeleteDuplicates", "@", "NESet"}]}]}], "\n", "]"}]}]], "Code",Ex\
pressionUUID->"8d24ac87-06a9-42b5-860e-18c3d12ce091"],

Cell["\<\
Mixed strategies mean probability distributions on the sets of pure \
strategies. The payoff in the mixed games is formed by mean values of the \
payoff.\
\>", "Text",
 CellChangeTimes->{{3.7402584982747226`*^9, 
  3.740258612921544*^9}},ExpressionUUID->"7324193c-b499-46cb-bc40-\
55644f7877da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mixedNashEquilibria", "[", "m_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"m", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"m", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\n", "  ", 
    RowBox[{
     RowBox[{"NESet", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", "\n", "  ", 
     RowBox[{"Do", "[", "\n", "     ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[DoubleStruckCapitalU]", "=", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "a", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "        ", 
        
        RowBox[{"Do", "[", "\n", "              ", 
         RowBox[{
          RowBox[{"Do", "[", "\n", "                  ", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{
                 "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", ",", 
                  RowBox[{"{", "}"}]}], "]"}], "==", "0"}], ",", "Break", ",",
                "Continue"}], "]"}], ";", "\n", "                  ", 
             RowBox[{"\[DoubleStruckCapitalV]", "=", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "a", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\n", 
             "                       ", 
             RowBox[{
             "Do", "[", "                                            ", "\n", 
              "                            ", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Y", "[", 
                    RowBox[{
                    "a", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], "!=", "0"}], "&&", 
                  RowBox[{
                   RowBox[{"X", "[", 
                    RowBox[{
                    "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], "!=", "0"}]}], 
                 ",", "\n", "                                      ", 
                 RowBox[{"NESet", "=", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"NESet", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"XOut", "[", 
                    RowBox[{
                    "b", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}], ",", 
                    RowBox[{"YOut", "[", 
                    RowBox[{
                    "a", ",", "i", ",", "j", ",", "\[DoubleStruckCapitalI]", 
                    ",", "\[DoubleStruckCapitalJ]"}], "]"}]}], "}"}]}], 
                   "]"}]}], ",", "\n", 
                 "                                      ", "Break"}], "\n", 
                "                             ", "]"}], ",", "\n", 
               "                        ", 
               RowBox[{"{", 
                RowBox[{"\[DoubleStruckCapitalJ]", ",", 
                 RowBox[{"Subsets", "[", "\[DoubleStruckCapitalV]", "]"}]}], 
                "}"}]}], "\n", "                       ", "]"}]}], ",", "\n", 
            "               ", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "a", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\n", 
           "              ", "]"}], ",", "\n", "         ", 
          RowBox[{"{", 
           RowBox[{"\[DoubleStruckCapitalI]", ",", 
            RowBox[{"Subsets", "[", "\[DoubleStruckCapitalU]", "]"}]}], 
           "}"}]}], "\n", "        ", "]"}]}], ",", "\n", "   ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "a", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "\n", "  ", "]"}], ";", 
     "\n", "  ", 
     RowBox[{"DeleteDuplicates", "@", "NESet"}]}]}], "\n", "]"}]}]], "Code",Ex\
pressionUUID->"6c924052-d09b-47fe-b02c-d31a9300b145"],

Cell["\<\
The games of the Nash equilibrium set finding is described in detail in:\
\>", "Text",
 CellChangeTimes->{{3.740258733048364*^9, 
  3.740258804204047*^9}},ExpressionUUID->"c883db96-e0d9-43e9-a01e-\
30f86ef6bca4"],

Cell[TextData[ButtonBox["Ungureanu, Valeriu, Nash equilibria set computing in \
finite extended games, CSJM, 2006, Vol. 14, No. 3 (42), pp. 345-365.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.math.md/files/csjm/v14-n3/v14-n3-(pp345-365).pdf"], None},
 ButtonNote->
  "http://www.math.md/files/csjm/v14-n3/v14-n3-(pp345-365).pdf"]], "Text",
 CellChangeTimes->{{3.7402567866662316`*^9, 3.740256909571971*^9}, {
  3.7402576459109545`*^9, 
  3.7402578999048576`*^9}},ExpressionUUID->"93af7db0-0821-4c61-9ca9-\
cfb45af936a8"],

Cell["\<\
Remark, that in games with mixed strategies Nash equilibrium sets may have \
continuous cardinality.\
\>", "Text",
 CellChangeTimes->{{3.740258848228393*^9, 
  3.74025892758228*^9}},ExpressionUUID->"98ff923b-70ce-4aaa-8c1a-\
32d3a74203b7"],

Cell[TextData[{
 "The function ",
 StyleBox["game2x2Plot[m_]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " is based mainly on three functions: g1[], g2[], and nes[]. The method used \
for Nash equilibrium set computing is described in details in the article:"
}], "Text",
 CellChangeTimes->{{3.7402589768033137`*^9, 
  3.7402592558388004`*^9}},ExpressionUUID->"75af82f4-c06e-44bd-a5f7-\
60f2e974dca0"],

Cell[TextData[ButtonBox["Ungureanu, Valeriu, Nash equilibrium set function in \
dyadic mixed-strategy games, CSJM v .25, n .1 (73), 2017.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.math.md/files/csjm/v25-n1/v25-n1-(pp3-20).pdf"], None},
 ButtonNote->
  "http://www.math.md/files/csjm/v25-n1/v25-n1-(pp3-20).pdf"]], "Text",
 CellChangeTimes->{{3.7402589768033137`*^9, 3.7402592546669617`*^9}, {
  3.7402593256362295`*^9, 3.740259348380266*^9}, {3.7402593835927486`*^9, 
  3.7402593856347427`*^9}, {3.7402594163087697`*^9, 
  3.7402594163087697`*^9}},ExpressionUUID->"3651f34b-1363-479f-bcdc-\
f96d7a5b9edd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "2"}]}]}], "x2", " ", "Mixed", " ", "Strategy", " ",
      "Game"}], " ", "-", " ", 
    RowBox[{"Graphs", " ", "Intersection", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Metod", " ", "--"}], "--"}], "--"}]}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g1", "[", 
     RowBox[{"\[Alpha]_", ",", "\[Alpha]0_"}], "]"}], ":=", 
    RowBox[{"\[Piecewise]", 
     RowBox[{"{", "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rectangle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", "==", "0"}], "&&", 
          RowBox[{"\[Alpha]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}]}]}], 
        "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<=", "0"}], " ", "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}]}]}], 
        "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "0"}], "&&", 
          RowBox[{"\[Alpha]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "0"}], "&&", 
          RowBox[{"\[Alpha]0", "<", "0"}], "&&", "\n", "  ", 
          RowBox[{
           RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}]}], "}"}], ",",
        "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}]}], "}"}], 
       ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", "<", "0"}], "&&", 
          RowBox[{"\[Alpha]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", "<", "0"}], "&&", 
          RowBox[{"\[Alpha]0", ">", "0"}], "&&", "\n", "  ", 
          RowBox[{
           RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}]}], "}"}], ",",
        "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Alpha]", "<", "0"}], "&&", 
          RowBox[{
           RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}]}], "}"}]}], 
      "\n", "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"g2", "[", 
     RowBox[{"\[Beta]_", ",", "\[Beta]0_"}], "]"}], ":=", 
    RowBox[{"\[Piecewise]", 
     RowBox[{"{", "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rectangle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", "==", "0"}], "&&", 
          RowBox[{"\[Beta]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">=", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<=", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", ">", "0"}], "&&", 
          RowBox[{"\[Beta]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", ">", "0"}], "&&", 
          RowBox[{"\[Beta]0", "<", "0"}], "&&", "\n", "  ", 
          RowBox[{
           RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}]}], "}"}], ",", 
       "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", ">", "0"}], "&&", 
          RowBox[{
           RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}]}], "}"}], ",", 
       "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", "<", "0"}], "&&", 
          RowBox[{"\[Beta]0", "==", "0"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", "<", "0"}], "&&", 
          RowBox[{"\[Beta]0", ">", "0"}], "&&", "\n", "  ", 
          RowBox[{
           RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}]}], "}"}], ",", 
       "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Beta]", "<", "0"}], "&&", 
          RowBox[{
           RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}]}], "}"}]}], 
      "\n", "}"}]}]}], "\n", 
   RowBox[{
    RowBox[{"nes", "[", 
     RowBox[{
     "\[Alpha]_", ",", "\[Alpha]0_", ",", "\[Beta]_", ",", "\[Beta]0_"}], 
     "]"}], ":=", 
    RowBox[{"\[Piecewise]", 
     RowBox[{"{", "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "==", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "==", "0"}], "&&", 
            RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}]}], 
        RowBox[{"(*", " ", "1", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "2", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "3", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}]}]}], "  ", 
        RowBox[{"(*", " ", "4", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"g2", "[", 
              RowBox[{"\[Beta]", ",", "\[Beta]0"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"g2", "[", 
            RowBox[{"\[Beta]", ",", "\[Beta]0"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
           ")"}]}]}], " ", 
        RowBox[{"(*", " ", "5", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}]}]}], " ", 
        RowBox[{"(*", " ", "6", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "7", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "==", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}]}]}], " ", 
        RowBox[{"(*", " ", "8", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}]}]}], " ", 
        RowBox[{"(*", " ", "9", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "10", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "11", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", "\n", 
           "  ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", "\n", 
          "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "12", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">=", "0"}], "&&", 
                RowBox[{"\[Beta]0", ">", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "13", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", "<=", "0"}], "&&", 
                RowBox[{"\[Alpha]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], 
               ")"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", "<=", "0"}], "&&", 
                RowBox[{"\[Beta]0", "<", "0"}]}], ")"}], "||", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", ">", "0"}], "&&", 
                RowBox[{
                 RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
             ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "14", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}]}]}], " ", 
        RowBox[{"(*", " ", "15", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "16", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "17", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"g1", "[", 
              RowBox[{"\[Alpha]", ",", "\[Alpha]0"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"g1", "[", 
            RowBox[{"\[Alpha]", ",", "\[Alpha]0"}], "]"}]}], "}"}], ",", " ", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "==", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "18", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}]}], 
             "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "19", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}], "&&", " ", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "20", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", " ", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "21", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}]}], 
             "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}]}], 
             "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "22", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
            "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", ">", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}], 
           ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", ">", "0"}], "&&", 
              RowBox[{"\[Beta]0", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}], 
           ")"}]}]}], 
        RowBox[{"(*", "23", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], ">", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "24", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        RowBox[{"(*", " ", "25", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "26", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "27", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "0"}], 
               "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "28", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{"\[Alpha]0", "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}], 
           ")"}], "||", "\n", "  ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "<", "0"}], "&&", 
              RowBox[{
               RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", "<", "0"}], "&&", 
              RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}], ")"}]}]}], "  ", 
        RowBox[{"(*", " ", "29", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "30", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "31", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], " ", "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", "==", "0"}]}], ")"}]}]}], " ", 
        RowBox[{"(*", " ", "32", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "33", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]0", "/", "\[Alpha]"}], ")"}]}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{"\[Alpha]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "<", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "==", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "34", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", ">", "0"}], "&&", 
            RowBox[{"\[Beta]0", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], ">", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "35", " ", "*)"}], "}"}], ",", "\n", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]0", "/", "\[Beta]"}], ")"}]}], ",", "1"}], 
               "}"}]}], "}"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Alpha]", "+", "\[Alpha]0"}], "==", "0"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "<", "0"}], "&&", 
            RowBox[{"\[Beta]0", ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"\[Beta]", "+", "\[Beta]0"}], "<", "0"}]}], ")"}]}]}], 
        " ", 
        RowBox[{"(*", " ", "36", " ", "*)"}], "}"}]}], "\n", "}"}]}]}], "\n", 
   
   RowBox[{
    RowBox[{"game2x2Plot", "[", "m_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"matr", "=", "m"}], "}"}], ",", "\n", "\t\t\t\t ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[DoubleStruckA]11", ",", "\[DoubleStruckA]12"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"\[DoubleStruckA]21", ",", "\[DoubleStruckA]22"}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[DoubleStruckB]11", ",", "\[DoubleStruckB]12"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"\[DoubleStruckB]21", ",", "\[DoubleStruckB]22"}], 
             "}"}]}], "}"}]}], "}"}], "=", "matr"}], ";", "\n", "\t\t\t    ", 
       
       RowBox[{"Manipulate", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "\n", "\t\t\t\t\t\t", "Blue", ",", 
                  RowBox[{"g1", "[", 
                   RowBox[{
                    RowBox[{"a11", "-", "a12", "-", "a21", "+", "a22"}], ",", 
                    
                    RowBox[{"a12", "-", "a22"}]}], "]"}], ",", "\n", 
                  "\t\t\t\t\t\t", "Green", ",", 
                  RowBox[{"g2", "[", 
                   RowBox[{
                    RowBox[{"b11", "-", "b12", "-", "b21", "+", "b22"}], ",", 
                    
                    RowBox[{"b21", "-", "b22"}]}], "]"}], ",", "\n", 
                  "\t\t\t\t\t\t", "Red", ",", 
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                  RowBox[{"nes", "[", 
                   RowBox[{
                    RowBox[{"a11", "-", "a12", "-", "a21", "+", "a22"}], ",", 
                    
                    RowBox[{"a12", "-", "a22"}], ",", 
                    RowBox[{"b11", "-", "b12", "-", "b21", "+", "b22"}], ",", 
                    
                    RowBox[{"b21", "-", "b22"}]}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"PlotRange", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"Axes", "->", "True"}], ",", 
                RowBox[{"AxesLabel", "->", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\>\"", ",", 
                   "\"\<\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)\>\""}], 
                  "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
                RowBox[{"ImageSize", "->", 
                 RowBox[{"{", 
                  RowBox[{"300", ",", "300"}], "}"}]}]}], "]"}], "}"}], ",", 
             RowBox[{"{", "\"\< \>\"", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Reference Nash Equilibria\>\"", ",", "Bold"}], 
                "]"}]}], "}"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nes", "[", 
                   RowBox[{
                    RowBox[{"a11", "-", "a12", "-", "a21", "+", "a22"}], ",", 
                    
                    RowBox[{"a12", "-", "a22"}], ",", 
                    RowBox[{"b11", "-", "b12", "-", "b21", "+", "b22"}], ",", 
                    
                    RowBox[{"b21", "-", "b22"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "Bold"}], 
                "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"ItemSize", "->", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "1", ",", "1", ",", "3"}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "\n", "\t\t\t\t\t", 
          "]"}], ",", "\n", "\t\t\t\t\t\t", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Matrix A\>\"", ",", "Bold"}], "]"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "a11", ",", "\[DoubleStruckA]11", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(a\\), \\(11\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "a12", ",", "\[DoubleStruckA]12", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(a\\), \\(12\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "a21", ",", "\[DoubleStruckA]21", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(a\\), \\(21\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "a22", ",", "\[DoubleStruckA]22", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(a\\), \\(22\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", "Delimiter", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "NonAntagonistic", ",", "True", ",", " ", 
             "\"\<NonAntagonistic\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", "Delimiter", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Matrix B\>\"", ",", "Bold"}], "]"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "b11", ",", "\[DoubleStruckB]11", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(b\\), \\(11\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Enabled", "->", "NonAntagonistic"}], ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "b12", ",", "\[DoubleStruckB]12", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(b\\), \\(12\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Enabled", "->", "NonAntagonistic"}], ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "b21", ",", "\[DoubleStruckB]21", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(b\\), \\(21\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Enabled", "->", "NonAntagonistic"}], ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "b22", ",", "\[DoubleStruckB]22", ",", 
             "\"\<\\!\\(\\*SubscriptBox[\\(b\\), \\(22\\)]\\)\>\""}], "}"}], 
           ",", 
           RowBox[{"-", "10"}], ",", "10", ",", "1", ",", 
           RowBox[{"Enabled", "->", "NonAntagonistic"}], ",", 
           RowBox[{"Appearance", "->", " ", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Tiny"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t", "Delimiter", ",", "\n", "\t\t\t\t\t\t", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Matrices A and B\>\"", ",", "Bold"}], "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{"Dynamic", "[", "\n", "\t\t\t\t\t\t", 
          RowBox[{"TableForm", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "a11", "]"}], "<>", "\"\< , \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{"NonAntagonistic", ",", "b11", ",", 
                    RowBox[{"b11", "=", 
                    RowBox[{"-", "a11"}]}]}], "]"}], "]"}]}], ",", "\n", 
                "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"ToString", "[", "a12", "]"}], "<>", "\"\< , \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{"NonAntagonistic", ",", "b12", ",", 
                    RowBox[{"b12", "=", 
                    RowBox[{"-", "a12"}]}]}], "]"}], "]"}]}]}], "}"}], ",", 
              "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "a21", "]"}], "<>", "\"\< , \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{"NonAntagonistic", ",", "b21", ",", 
                    RowBox[{"b21", "=", 
                    RowBox[{"-", "a21"}]}]}], "]"}], "]"}]}], ",", "\n", 
                "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"ToString", "[", "a22", "]"}], "<>", "\"\< , \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{"NonAntagonistic", ",", "b22", ",", 
                    RowBox[{"b22", "=", 
                    RowBox[{"-", "a22"}]}]}], "]"}], "]"}]}]}], "}"}]}], 
             "}"}], ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"TableHeadings", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<1\>\"", ",", "\"\<2\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<  1\>\"", ",", "\"\<  2\>\""}], "}"}]}], "}"}]}],
             ",", "\n", "\t\t\t\t\t\t  ", 
            RowBox[{"TableSpacing", "->", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}], "\n", "\t\t\t\t\t\t", "]"}],
           "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"SaveDefinitions", "->", "True"}]}], "\n", "\t\t\t\t", 
        "]"}]}]}], "\n", "]"}]}]}]}]], "Code",ExpressionUUID->"3b8ed1c1-9cfc-\
46e1-80d7-96a5c0dc3638"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Written Content / Lesson Plans", "Subsubsection",
 CellChangeTimes->{
  3.736182124333714*^9},ExpressionUUID->"ba68b18e-0118-4694-9cc8-\
e616df451654"],

Cell["Strategic form games are state as:", "Text",
 CellChangeTimes->{{3.7402552817050495`*^9, 
  3.7402552958353558`*^9}},ExpressionUUID->"7ef03476-6e3e-483c-bf7b-\
8f94b881d7e6"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[CapitalGamma]", "=", 
     RowBox[{"\[LeftAngleBracket]", 
      FormBox[GridBox[{
         {GridBox[{
            {
             RowBox[{"N", ","}], 
             RowBox[{
              SubscriptBox[
               RowBox[{"{", 
                SubscriptBox["X", "p"], "}"}], 
               RowBox[{"p", "\[Element]", "N"}]], ","}]}
           }], 
          SubscriptBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["f", "p"], "(", "x", ")"}], "}"}], 
           RowBox[{"p", "\[Element]", "N"}]]}
        }],
       TraditionalForm], " ", "\[RightAngleBracket]"}]}],
    FontColor->RGBColor[0.5019607843137255, 0., 0.]], TraditionalForm]], 
  "Text",
  CellChangeTimes->{{3.4197683854093246`*^9, 3.419768441944839*^9}, {
    3.419768813440997*^9, 3.4197688342971373`*^9}, {3.540873461546875*^9, 
    3.54087347103125*^9}, {3.540873509109375*^9, 3.54087365646875*^9}, {
    3.54087369025*^9, 3.54087369321875*^9}, {3.54087382828125*^9, 
    3.540873833234375*^9}, {3.540873911484375*^9, 3.540873966359375*^9}, {
    3.5408741083125*^9, 3.540874168359375*^9}, {3.54108485296875*^9, 
    3.54108486375*^9}, 3.5410852621875*^9, {3.54115145471875*^9, 
    3.5411515290625*^9}, {3.541151579703125*^9, 3.541151615015625*^9}},
  TextAlignment->Center,
  FontFamily->"Times New Roman",
  FontSize->20,ExpressionUUID->"0b3a629a-5857-4fbc-9729-b878b349ffff"],
 ","
}], "Text",
 CellChangeTimes->{{3.54087343178125*^9, 3.5408734333125*^9}, 
   3.540873697328125*^9, {3.5413216351989822`*^9, 3.541321636493784*^9}, {
   3.5415314008901544`*^9, 3.541531410328171*^9}, {3.5415657921264315`*^9, 
   3.541565793421234*^9}, {3.5416787365477896`*^9, 3.541678739932996*^9}, {
   3.5416788481815853`*^9, 3.541678849242388*^9}},
 TextAlignment->Center,
 FontSize->16,ExpressionUUID->"64c39778-04ea-4de1-8ff1-8b546194528e"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["N", "InlineFormula",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[" = {", "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox["1, 2, ..., n", "InlineFormula",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox["}", "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[" ",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "is a set of players,"
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.540875312203125*^9}, {
  3.54087573571875*^9, 3.540875740296875*^9}, {3.54108492271875*^9, 
  3.54108493634375*^9}},
 FontSize->16,ExpressionUUID->"e2ca39ef-fd5b-421d-b94d-048b37794fd8"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["X", "p"], "\[SubsetEqual]", 
     SuperscriptBox["R", 
      SubscriptBox["k", "p"]]}], "InlineFormula",
    FontSize->20,
    FontColor->RGBColor[0.5019607843137255, 0., 0.]], TraditionalForm]],
  ExpressionUUID->"061a5ccf-bbad-443d-8211-f87c93472a1f"],
 " is a set of strategies of player ",
 StyleBox["p ", "InlineFormula",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox["\[Element] ", "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox["N", "InlineFormula",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[",",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]]
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.540875312203125*^9}, {
  3.54087573571875*^9, 3.540875740296875*^9}, {3.54108492271875*^9, 
  3.541084933015625*^9}, {3.541085002296875*^9, 3.541085004515625*^9}},
 FontSize->16,ExpressionUUID->"563ecde4-0e45-4374-9363-6bf4fb13952c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "p"], TraditionalForm]],
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "ae176f77-a27a-4cad-a132-4f1dac1e1220"],
 StyleBox[" < +\[Infinity],",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[" p",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[" \[Element] ",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox["N",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[",",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]]
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.54087531865625*^9}, 
   3.540875750296875*^9},ExpressionUUID->"c3fffcc9-be7c-4620-be3f-\
f6c437eff14c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["f", "p"], "(", "x", ")"}], "InlineFormula",
    FontSize->20], TraditionalForm]],
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "7cecf74d-b9ad-4511-a040-6a6182a8ea22"],
 StyleBox[" ",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "is a",
 StyleBox[" ",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "th"], TraditionalForm]],
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "e2f26f26-21e5-4426-8aca-c9d5afe68869"],
 " player cost function defined on the Cartesian product ",
 StyleBox["X", "InlineFormula",
  FontSize->20,
  FontSlant->"Italic",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[" ", "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 StyleBox[Cell[BoxData[
  FormBox["=", TraditionalForm]], "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "05fd6152-a65e-41dc-8745-5cbff0b56b36"], "InlineFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   UnderscriptBox["\[Times]", 
    RowBox[{"p", "\[Element]", "N"}]], TraditionalForm]], "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "e62c7e4e-13aa-4fd8-b440-0a1b2a8d3927"], "InlineFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["X", "p"], TraditionalForm]], "InlineFormula",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.],ExpressionUUID->
  "05934f86-7479-4871-88ac-579bf3640f58"], "InlineFormula"],
 StyleBox[".",
  FontSize->20,
  FontColor->RGBColor[0.5019607843137255, 0., 0.]]
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.540875461578125*^9}, {
   3.540875591671875*^9, 3.540875592984375*^9}, 3.540875760171875*^9},
 FontSize->16,ExpressionUUID->"01d31c09-428d-4d78-8c4e-1a2c3d7c6108"]
}, Open  ]],

Cell["\<\
Suppose, all players maximise values of their payoff functions.\
\>", "Text",
 CellChangeTimes->{{3.7402555673507533`*^9, 
  3.7402556000277395`*^9}},ExpressionUUID->"1abdcdc4-ccb6-4a48-bc89-\
940db2f67b27"],

Cell["Players select their simultaneously and independently:", "Text",
 CellChangeTimes->{{3.540875086328125*^9, 3.540875110546875*^9}, {
  3.5408751483125*^9, 3.540875153109375*^9}, {3.7402553149638357`*^9, 
  3.740255357688367*^9}},
 FontSize->16,ExpressionUUID->"7af03624-cb57-421a-a942-34e03cf9ffba"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["first player",
  FontWeight->"Bold"],
 " chooses his strategy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "\[Element]", 
    SubscriptBox["X", "1"]}], TraditionalForm]],ExpressionUUID->
  "4a14e8ff-f050-46d8-87fd-dc85e6de2da8"],
 ","
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.5408752391875*^9}, {
  3.7402553649958797`*^9, 3.7402553675781374`*^9}},
 FontSize->16,ExpressionUUID->"46991d30-b0f8-45dc-bfd3-1aca2097b0d6"],

Cell[TextData[{
 StyleBox["second player",
  FontWeight->"Bold"],
 " chooses his strategy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], "\[Element]", 
    SubscriptBox["X", "2"]}], TraditionalForm]],ExpressionUUID->
  "9504e2c9-8972-4c5c-b620-a69c05013dcc"],
 ","
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.540875312203125*^9}, {
  3.740255373105489*^9, 3.740255382632169*^9}},
 FontSize->16,ExpressionUUID->"5cc8b883-7233-420c-8f2a-ec8088b7788c"],

Cell["and so on", "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.54087531865625*^9}},
 FontSize->16,ExpressionUUID->"a4cf66ae-404a-4151-a271-6ebd011ce86a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"ae7cf4fe-4acc-41da-bbb2-2a7cfe374f6f"],
 StyleBox[" player",
  FontWeight->"Bold"],
 " selects his strategy ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "n"], "\[Element]", 
    SubscriptBox["X", "n"]}], TraditionalForm]],ExpressionUUID->
  "689eaf3c-a107-4ffc-828a-eebe6181fc83"],
 "."
}], "ItemParagraph",
 CellChangeTimes->{{3.540875157984375*^9, 3.540875461578125*^9}, {
  3.540875591671875*^9, 3.540875592984375*^9}, {3.740255388473075*^9, 
  3.7402554050406036`*^9}},
 FontSize->16,ExpressionUUID->"251a9dbf-b75d-4207-80d7-50354e0af0de"]
}, Open  ]],

Cell["\<\
On the resulting profile every player computes his payoff. Remark, such \
strategies are called pure strategies.\
\>", "Text",
 CellChangeTimes->{{3.7402554164021907`*^9, 3.7402554673206034`*^9}, {
  3.740257614837388*^9, 
  3.740257635386422*^9}},ExpressionUUID->"c8a08339-13ca-4864-a065-\
4db79d00263e"],

Cell[TextData[{
 "A profile ",
 StyleBox["x*",
  FontWeight->"Bold"],
 " is called Nash equilibrium if: "
}], "Text",
 CellChangeTimes->{{3.7402554164021907`*^9, 
  3.7402555596704025`*^9}},ExpressionUUID->"e13d4ad4-899d-4b86-b129-\
94b8cfaf9804"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox[
     FormBox[
      RowBox[{
       SubscriptBox["f", "p"], "(", 
       SuperscriptBox["x", "*"], ")"}],
      TraditionalForm],
     FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
    StyleBox["\[GreaterEqual]",
     FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
    RowBox[{
     StyleBox[
      SubscriptBox["f", "p"],
      FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
     StyleBox[
      RowBox[{
       StyleBox["(",
        FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
       RowBox[{
        SubscriptBox[
         StyleBox["x",
          FontColor->RGBColor[0.5019607843137255, 0., 0.]], "p"], ",", 
        SubsuperscriptBox[
         StyleBox["x",
          FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
         RowBox[{"-", "p"}], "*"]}], 
       StyleBox[")",
        FontColor->RGBColor[0.5019607843137255, 0., 0.]]}],
      FontColor->RGBColor[0.6, 0.4, 0.2]]}]}], 
   StyleBox[",",
    FontColor->RGBColor[0.6, 0.4, 0.2]], 
   StyleBox[" ",
    FontColor->RGBColor[0.6, 0.4, 0.2]], 
   StyleBox[
    RowBox[{
     SubscriptBox[
      StyleBox["x",
       FontColor->RGBColor[0.5019607843137255, 0., 0.]], "p"], 
     StyleBox["\[Element]",
      FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
     SubscriptBox[
      StyleBox["X",
       FontColor->RGBColor[0.5019607843137255, 0., 0.]], 
      RowBox[{"-", "p"}]]}],
    FontColor->RGBColor[0.6, 0.4, 0.2]], 
   StyleBox[",",
    FontColor->RGBColor[0.6, 0.4, 0.2]], 
   StyleBox[" ",
    FontColor->RGBColor[0.6, 0.4, 0.2]], 
   RowBox[{
    StyleBox["p",
     FontColor->RGBColor[0.6, 0.4, 0.2]], 
    StyleBox["\[Element]",
     FontColor->RGBColor[0.6, 0.4, 0.2]], 
    RowBox[{
     StyleBox["N",
      FontColor->RGBColor[0.6, 0.4, 0.2]], 
     StyleBox[".",
      FontColor->RGBColor[0.6, 0.4, 0.2]], " "}]}]}], 
  TraditionalForm]], "Text",
 CellChangeTimes->{{3.4197683854093246`*^9, 3.419768441944839*^9}, {
   3.419768813440997*^9, 3.4197688342971373`*^9}, {3.540873461546875*^9, 
   3.54087347103125*^9}, {3.540873509109375*^9, 3.54087365646875*^9}, {
   3.54087369025*^9, 3.54087369321875*^9}, {3.54087382828125*^9, 
   3.540873833234375*^9}, {3.540873911484375*^9, 3.540873966359375*^9}, {
   3.5408741083125*^9, 3.540874168359375*^9}, {3.54108485296875*^9, 
   3.54108486375*^9}, 3.5410852621875*^9, {3.54115145471875*^9, 
   3.5411515290625*^9}, {3.541151579703125*^9, 3.541151615015625*^9}},
 TextAlignment->Center,
 FontFamily->"Times New Roman",
 FontSize->20,ExpressionUUID->"8ab0e176-6030-432e-bc62-ab86f20eac5e"]], "Text",\

 CellChangeTimes->{{3.54087343178125*^9, 3.5408734333125*^9}, 
   3.540873697328125*^9, {3.5413216351989822`*^9, 3.541321636493784*^9}, {
   3.5415314008901544`*^9, 3.541531410328171*^9}, {3.5415657921264315`*^9, 
   3.541565793421234*^9}, {3.5416787365477896`*^9, 3.541678739932996*^9}, {
   3.5416788481815853`*^9, 3.541678849242388*^9}, {3.74025562770284*^9, 
   3.7402557779699593`*^9}, {3.740255809157586*^9, 3.7402558774079647`*^9}, {
   3.7402566862090807`*^9, 3.7402567263967896`*^9}},
 TextAlignment->Center,
 FontSize->16,ExpressionUUID->"f386aeb3-fedf-40d5-998a-05515206b99c"],

Cell["\<\
We use the method of intersection of graphs of best response mappings to find \
Nash equilibrium set. The  method arises directly from the above definition.\
\>", "Text",
 CellChangeTimes->{{3.7402567866662316`*^9, 3.740256909571971*^9}, 
   3.740257644189714*^9, {3.7402597006113496`*^9, 
   3.7402597412016416`*^9}},ExpressionUUID->"02f5a096-5f7d-4828-9329-\
fb95145125f5"],

Cell["\<\
The method of intersection is explained in details in the following works:\
\>", "Text",
 CellChangeTimes->{{3.7402567866662316`*^9, 3.740256909571971*^9}, {
  3.7402576459109545`*^9, 
  3.740257716966951*^9}},ExpressionUUID->"f9e34660-a887-4db9-94d1-\
1512990746cc"],

Cell[TextData[ButtonBox["Ungureanu, Valeriu, Nash equilibria set computing in \
finite extended games, CSJM, 2006, Vol. 14, No. 3 (42), pp. 345-365.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.math.md/files/csjm/v14-n3/v14-n3-(pp345-365).pdf"], None},
 ButtonNote->
  "http://www.math.md/files/csjm/v14-n3/v14-n3-(pp345-365).pdf"]], "Text",
 CellChangeTimes->{{3.7402567866662316`*^9, 3.740256909571971*^9}, {
  3.7402576459109545`*^9, 
  3.7402578999048576`*^9}},ExpressionUUID->"25701866-373c-4bad-b34d-\
fd6d22449c11"],

Cell[TextData[ButtonBox["Ungureanu, Valeriu, \
\[OpenCurlyDoubleQuote]Pareto-Nash-Stackelberg Game and Control Theory\
\[CloseCurlyDoubleQuote], Springer International Publishing, 2018, XXI + 343 \
pp.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.springer.com/gp/book/9783319751504"], None},
 ButtonNote->"https://www.springer.com/gp/book/9783319751504"]], "Text",
 CellChangeTimes->{{3.740252567839325*^9, 3.7402526241663504`*^9}, 
   3.7402526547052126`*^9, {3.7402527414959307`*^9, 3.7402527456736875`*^9}, 
   3.740257909521549*^9},ExpressionUUID->"b6428e30-a487-4467-9fb8-\
0b73d0499d4f"],

Cell[TextData[ButtonBox["Ungureanu, Valeriu, Nash equilibrium set function in \
dyadic mixed-strategy games, CSJM v .25, n .1 (73), 2017.",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.math.md/files/csjm/v25-n1/v25-n1-(pp3-20).pdf"], None},
 ButtonNote->
  "http://www.math.md/files/csjm/v25-n1/v25-n1-(pp3-20).pdf"]], "Text",
 CellChangeTimes->{{3.7402589768033137`*^9, 3.7402592546669617`*^9}, {
  3.7402593256362295`*^9, 3.740259348380266*^9}, {3.7402593835927486`*^9, 
  3.7402593856347427`*^9}, {3.7402594163087697`*^9, 
  3.7402594163087697`*^9}},ExpressionUUID->"332cda73-fee5-402f-a880-\
1b16ef1a5e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions in Detail", "Subsubsection",
 CellChangeTimes->{
  3.736182152929455*^9},ExpressionUUID->"405e0fe7-2022-4d50-b275-\
5f85c6659f37"],

Cell["\<\
The Wolfram language and Mathematica system present great opportunities for a \
successful Game Theory realization. The mathematical background of the \
Mathematica System, as well as the programming capabilities of the Wolfram \
Language provided together needed tools for solving game theory problems. We \
are referring  especially such functions as Solve, Reduce, Tuples etc., \
needed for solving systems of equations and inequalities in the case of \
multi-matrix mixed strategy games.\
\>", "Text",
 CellChangeTimes->{{3.7402528382861347`*^9, 
  3.7402533096465626`*^9}},ExpressionUUID->"484b8b87-d20a-4ec5-ac39-\
c04eca1feb7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["All Visualizations", "Subsubsection",
 CellChangeTimes->{{3.736182157207601*^9, 
  3.736182158846121*^9}},ExpressionUUID->"aa59b7ca-7848-48f1-96cf-\
6286c1fabb09"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{GameTheory`Private`a11$$ = 5, GameTheory`Private`a12$$ = 
    3, GameTheory`Private`a21$$ = 7, GameTheory`Private`a22$$ = 2, 
    GameTheory`Private`b11$$ = 3, GameTheory`Private`b12$$ = 6, 
    GameTheory`Private`b21$$ = 5, GameTheory`Private`b22$$ = 3, 
    GameTheory`Private`NonAntagonistic$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["Matrix A", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[GameTheory`Private`a11$$], 5, 
       "\!\(\*SubscriptBox[\(a\), \(11\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a12$$], 3, 
       "\!\(\*SubscriptBox[\(a\), \(12\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a21$$], 7, 
       "\!\(\*SubscriptBox[\(a\), \(21\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`a22$$], 2, 
       "\!\(\*SubscriptBox[\(a\), \(22\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`NonAntagonistic$$], True, "NonAntagonistic"}, {
      True, False}}, {
      Hold[
       Style["Matrix B", Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[GameTheory`Private`b11$$], 3, 
       "\!\(\*SubscriptBox[\(b\), \(11\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b12$$], 6, 
       "\!\(\*SubscriptBox[\(b\), \(12\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b21$$], 5, 
       "\!\(\*SubscriptBox[\(b\), \(21\)]\)"}, -10, 10, 1}, {{
       Hold[GameTheory`Private`b22$$], 3, 
       "\!\(\*SubscriptBox[\(b\), \(22\)]\)"}, -10, 10, 1}, {
      Hold[
       Style["Matrices A and B", Bold]], Manipulate`Dump`ThisIsNotAControl}, {
     
      Hold[
       Dynamic[
        TableForm[{{
           StringJoin[
            ToString[GameTheory`Private`a11$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b11$$, 
              GameTheory`Private`b11$$ = -GameTheory`Private`a11$$]]], 
           StringJoin[
            ToString[GameTheory`Private`a12$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b12$$, 
              GameTheory`Private`b12$$ = -GameTheory`Private`a12$$]]]}, {
           StringJoin[
            ToString[GameTheory`Private`a21$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b21$$, 
              GameTheory`Private`b21$$ = -GameTheory`Private`a21$$]]], 
           StringJoin[
            ToString[GameTheory`Private`a22$$], " , ", 
            ToString[
             If[
             GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b22$$, 
              GameTheory`Private`b22$$ = -GameTheory`Private`a22$$]]]}}, 
         TableHeadings -> {{"1", "2"}, {"  1", "  2"}}, 
         TableSpacing -> {2, 2}]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {300., {186.5, 192.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    GameTheory`Private`a11$4289$$ = 0, GameTheory`Private`a12$4290$$ = 0, 
    GameTheory`Private`a21$4291$$ = 0, GameTheory`Private`a22$4292$$ = 0, 
    GameTheory`Private`NonAntagonistic$4293$$ = False, 
    GameTheory`Private`b11$4294$$ = 0, GameTheory`Private`b12$4295$$ = 0, 
    GameTheory`Private`b21$4296$$ = 0, GameTheory`Private`b22$4297$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       GameTheory`Private`a11$$ = 5, GameTheory`Private`a12$$ = 3, 
        GameTheory`Private`a21$$ = 7, GameTheory`Private`a22$$ = 2, 
        GameTheory`Private`b11$$ = 3, GameTheory`Private`b12$$ = 6, 
        GameTheory`Private`b21$$ = 5, GameTheory`Private`b22$$ = 3, 
        GameTheory`Private`NonAntagonistic$$ = True}, "ControllerVariables" :> {
        Hold[GameTheory`Private`a11$$, GameTheory`Private`a11$4289$$, 0], 
        Hold[GameTheory`Private`a12$$, GameTheory`Private`a12$4290$$, 0], 
        Hold[GameTheory`Private`a21$$, GameTheory`Private`a21$4291$$, 0], 
        Hold[GameTheory`Private`a22$$, GameTheory`Private`a22$4292$$, 0], 
        Hold[
        GameTheory`Private`NonAntagonistic$$, 
         GameTheory`Private`NonAntagonistic$4293$$, False], 
        Hold[GameTheory`Private`b11$$, GameTheory`Private`b11$4294$$, 0], 
        Hold[GameTheory`Private`b12$$, GameTheory`Private`b12$4295$$, 0], 
        Hold[GameTheory`Private`b21$$, GameTheory`Private`b21$4296$$, 0], 
        Hold[GameTheory`Private`b22$$, GameTheory`Private`b22$4297$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          Graphics[{Thick, Blue, 
            GameTheory`Private`g1[
            GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
             GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
             GameTheory`Private`a12$$ - GameTheory`Private`a22$$], Green, 
            GameTheory`Private`g2[
            GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
             GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
             GameTheory`Private`b21$$ - GameTheory`Private`b22$$], Red, 
            PointSize[Large], 
            GameTheory`Private`nes[
            GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
             GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
             GameTheory`Private`a12$$ - GameTheory`Private`a22$$, 
             GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
             GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
             GameTheory`Private`b21$$ - GameTheory`Private`b22$$]}, 
           PlotRange -> {{0, 1}, {0, 1}}, Axes -> True, 
           AxesLabel -> {
            "\!\(\*SubscriptBox[\(x\), \(1\)]\)", 
             "\!\(\*SubscriptBox[\(y\), \(1\)]\)"}, 
           ImageSize -> {300, 300}]}, {" "}, {
          Text[
           Style["Reference Nash Equilibria", Bold]]}, {
          Text[
           Style[
            Part[
             GameTheory`Private`nes[
             GameTheory`Private`a11$$ - GameTheory`Private`a12$$ - 
              GameTheory`Private`a21$$ + GameTheory`Private`a22$$, 
              GameTheory`Private`a12$$ - GameTheory`Private`a22$$, 
              GameTheory`Private`b11$$ - GameTheory`Private`b12$$ - 
              GameTheory`Private`b21$$ + GameTheory`Private`b22$$, 
              GameTheory`Private`b21$$ - GameTheory`Private`b22$$], 1, 1], 
            Bold]]}}, ItemSize -> {Automatic, {10, 1, 1, 3}}, 
        Alignment -> {Center, Top}], "Specifications" :> {
        Style[
        "Matrix A", Bold], {{
         GameTheory`Private`a11$$, 5, 
          "\!\(\*SubscriptBox[\(a\), \(11\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a12$$, 3, 
          "\!\(\*SubscriptBox[\(a\), \(12\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a21$$, 7, 
          "\!\(\*SubscriptBox[\(a\), \(21\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`a22$$, 2, 
          "\!\(\*SubscriptBox[\(a\), \(22\)]\)"}, -10, 10, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, 
        Delimiter, {{
         GameTheory`Private`NonAntagonistic$$, True, "NonAntagonistic"}, {
         True, False}}, Delimiter, 
        Style[
        "Matrix B", Bold], {{
         GameTheory`Private`b11$$, 3, 
          "\!\(\*SubscriptBox[\(b\), \(11\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b12$$, 6, 
          "\!\(\*SubscriptBox[\(b\), \(12\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b21$$, 5, 
          "\!\(\*SubscriptBox[\(b\), \(21\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{
         GameTheory`Private`b22$$, 3, 
          "\!\(\*SubscriptBox[\(b\), \(22\)]\)"}, -10, 10, 1, Enabled -> 
         Dynamic[GameTheory`Private`NonAntagonistic$$], Appearance -> 
         "Labeled", ImageSize -> Tiny}, Delimiter, 
        Style["Matrices A and B", Bold], 
        Dynamic[
         TableForm[{{
            StringJoin[
             ToString[GameTheory`Private`a11$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b11$$, 
               GameTheory`Private`b11$$ = -GameTheory`Private`a11$$]]], 
            StringJoin[
             ToString[GameTheory`Private`a12$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b12$$, 
               GameTheory`Private`b12$$ = -GameTheory`Private`a12$$]]]}, {
            StringJoin[
             ToString[GameTheory`Private`a21$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b21$$, 
               GameTheory`Private`b21$$ = -GameTheory`Private`a21$$]]], 
            StringJoin[
             ToString[GameTheory`Private`a22$$], " , ", 
             ToString[
              If[
              GameTheory`Private`NonAntagonistic$$, GameTheory`Private`b22$$, 
               GameTheory`Private`b22$$ = -GameTheory`Private`a22$$]]]}}, 
          TableHeadings -> {{"1", "2"}, {"  1", "  2"}}, 
          TableSpacing -> {2, 2}]]}, "Options" :> {}, "DefaultOptions" :> {}],
     
     ImageSizeCache->{577., {219., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({GameTheory`Private`g1[
         Pattern[GameTheory`Private`\[Alpha], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Alpha]0, 
          Blank[]]] := Piecewise[{{
           Rectangle[{0, 0}, {1, 1}], 
           And[
           GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           Line[{{1, 0}, {1, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
             0], 
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
             0]]}, {
           Line[{{0, 0}, {0, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
             0], 
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
             0]]}, {
           Line[{{0, 0}, {1, 0}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           
           Line[{{0, 0}, {
             0, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {
             1, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0]}, {
           Line[{{0, 0}, {0, 1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Alpha] > 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
            0]}, {
           Line[{{1, 0}, {0, 0}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
            0]}, {
           
           Line[{{1, 0}, {
             1, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {
             0, -(GameTheory`Private`\[Alpha]0/
               GameTheory`Private`\[Alpha])}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0]}, {
           Line[{{1, 0}, {1, 1}, {0, 1}}], 
           And[
           GameTheory`Private`\[Alpha] < 0, 
            GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
            0]}}], GameTheory`Private`g2[
         Pattern[GameTheory`Private`\[Beta], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta]0, 
          Blank[]]] := Piecewise[{{
           Rectangle[{0, 0}, {1, 1}], 
           And[
           GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           Line[{{0, 1}, {1, 1}}], 
           Or[
            And[
            GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]]}, {
           Line[{{0, 0}, {1, 0}}], 
           Or[
            And[
            GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]]}, {
           Line[{{0, 0}, {0, 1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           
           Line[{{0, 
             0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              1}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]}, {
           Line[{{0, 0}, {1, 0}, {1, 1}}], 
           And[
           GameTheory`Private`\[Beta] > 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]}, {
          
           Line[{{0, 1}, {0, 0}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
            0]}, {
           
           Line[{{0, 
             1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
              0}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]}, {
           Line[{{0, 1}, {1, 1}, {1, 0}}], 
           And[
           GameTheory`Private`\[Beta] < 0, 
            GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]}}],
        GameTheory`Private`nes[
         Pattern[GameTheory`Private`\[Alpha], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Alpha]0, 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta], 
          Blank[]], 
         Pattern[GameTheory`Private`\[Beta]0, 
          Blank[]]] := Piecewise[{{{
            Point[{{0, 0}, {1, 0}, {1, 1}, {0, 1}}], 
            Rectangle[{0, 0}, {1, 1}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            Point[{{0, 1}, {1, 1}}], 
            Line[{{0, 1}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{{0, 0}, {1, 0}}], 
            Line[{{0, 0}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {0, 1}, {1, 1}}], 
            Line[{{0, 0}, {0, 1}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[
             Part[
              GameTheory`Private`g2[
              GameTheory`Private`\[Beta], GameTheory`Private`\[Beta]0], 1]], 
            GameTheory`Private`g2[
            GameTheory`Private`\[Beta], GameTheory`Private`\[Beta]0]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
              0]]]}, {{
            Point[{{0, 0}, {1, 0}, {1, 1}}], 
            Line[{{0, 0}, {1, 0}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{0, 1}, {0, 0}, {1, 0}}], 
            Line[{{0, 1}, {0, 0}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{0, 1}, {1, 1}, {1, 0}}], 
            Line[{{0, 1}, {1, 1}, {1, 0}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] == 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{{1, 0}, {1, 1}}], 
            Line[{{1, 0}, {1, 1}}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{1, 1}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{1, 0}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] >= 0, GameTheory`Private`\[Alpha]0 > 
               0], 
              And[
              GameTheory`Private`\[Alpha] < 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {0, 1}}], 
            Line[{{0, 0}, {0, 1}}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            Point[{0, 1}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] >= 0, GameTheory`Private`\[Beta]0 > 
               0], 
              And[
              GameTheory`Private`\[Beta] < 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
               0]]]]}, {{
            Point[{0, 0}]}, 
           Or[
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             Or[
              And[
              GameTheory`Private`\[Alpha] <= 0, GameTheory`Private`\[Alpha]0 < 
               0], 
              And[
              GameTheory`Private`\[Alpha] > 0, 
               GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
               0]], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             Or[
              And[
              GameTheory`Private`\[Beta] <= 0, GameTheory`Private`\[Beta]0 < 
               0], 
              And[
              GameTheory`Private`\[Beta] > 0, 
               GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
               0]]]]}, {{
            Point[{{0, 0}, {1, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 1}}], 
            Line[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                0}, {1, 0}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            Point[
             Part[
              GameTheory`Private`g1[
              GameTheory`Private`\[Alpha], GameTheory`Private`\[Alpha]0], 1]], 
            GameTheory`Private`g1[
            GameTheory`Private`\[Alpha], GameTheory`Private`\[Alpha]0]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             And[
             GameTheory`Private`\[Beta] == 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 0}, {
              1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}], 
            
            Line[{{0, 0}, {
              0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 0]], 
            
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 
              0, GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 
              0], 
             And[
             GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
              0]]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, GameTheory`Private`\[Alpha]0 < 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 > 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}], 
            
            Line[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] > 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            
            Point[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}], 
            
            Line[{{0, 
              0}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                0}, {1, 0}, {0, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               0}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
             0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            Point[{{1, 0}, {0, 1}}]}, 
           Or[
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, 
              GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 0]], 
            And[
             And[
             GameTheory`Private`\[Alpha] < 0, 
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 
              0], 
             And[
             GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
              0]]]}, {{
            
            Point[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}], 
            
            Line[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}, {1, 0}}], 
            
            Line[{{0, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {0, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/
                GameTheory`Private`\[Beta]), -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}, {{
            
            Point[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}, {0, 1}}], 
            
            Line[{{1, -(GameTheory`Private`\[Alpha]0/
                GameTheory`Private`\[Alpha])}, {1, 0}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, GameTheory`Private`\[Alpha]0 > 0,
              GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 < 0], 
            And[
            GameTheory`Private`\[Beta] < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 == 
             0]]}, {{
            
            Point[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]),
                1}, {1, 1}}], 
            
            Line[{{-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] > 0, GameTheory`Private`\[Beta]0 < 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 > 
             0]]}, {{
            
            Point[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}, {1, 0}}], 
            
            Line[{{0, 
              1}, {-(GameTheory`Private`\[Beta]0/GameTheory`Private`\[Beta]), 
               1}}]}, 
           And[
            And[
            GameTheory`Private`\[Alpha] < 0, 
             GameTheory`Private`\[Alpha] + GameTheory`Private`\[Alpha]0 == 0], 
            And[
            GameTheory`Private`\[Beta] < 0, GameTheory`Private`\[Beta]0 > 0, 
             GameTheory`Private`\[Beta] + GameTheory`Private`\[Beta]0 < 
             0]]}}], Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",ExpressionUUID->"02a94c9b-54f0-\
4799-97e1-5c3dc97fca9f"]
}, Open  ]],

Cell["Data Sources Links/References", "Subsubsection",
 CellChangeTimes->{
  3.736182217183381*^9},ExpressionUUID->"8d03133e-d036-4673-985c-\
415dd5ec88bb"],

Cell[CellGroupData[{

Cell["Future Directions", "Subsubsection",
 CellChangeTimes->{{3.7361822218287*^9, 
  3.7361822234759083`*^9}},ExpressionUUID->"9afe7952-52cb-49e5-812a-\
edf95df8c363"],

Cell["\<\
We intend to develop the package in several successive stages and directions.\
\
\>", "Text",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.740251972661214*^9}},ExpressionUUID->"3019718f-4bf1-4a35-8b90-\
79be52a501e4"],

Cell[CellGroupData[{

Cell[TextData[{
 "At the ",
 StyleBox["first initiation stage",
  FontWeight->"Bold"],
 " we plan to enlarge the number of strategic form game theory problems \
solved by the package, and to include more plotting possibilities."
}], "Item",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.740252008929833*^9}},ExpressionUUID->"7448b2dc-3e17-4354-a5b3-\
c5d613d3e3b5"],

Cell[TextData[{
 "At the",
 StyleBox[" second stage",
  FontWeight->"Bold"],
 " we intend to develop package functionality in order to solve extensive \
form games, and to include their abundant plotting functionality."
}], "Item",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.7402520231979628`*^9}},ExpressionUUID->"978c167d-453e-43cd-b72b-\
a5c8bb0d256d"],

Cell[TextData[{
 "At the ",
 StyleBox["third stage",
  FontWeight->"Bold"],
 ", we are considering adding support for cooperative games."
}], "Item",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.7402520268637123`*^9}},ExpressionUUID->"c048a0fa-0afb-478a-b77c-\
cdafbc93c3b6"],

Cell[TextData[{
 "At the",
 StyleBox[" fourth stage",
  FontWeight->"Bold"],
 ", we plan to consider differential games and control."
}], "Item",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.7402520318010263`*^9}},ExpressionUUID->"b20cf11f-168c-46bf-a517-\
e901ba60c61b"],

Cell[TextData[{
 StyleBox["Next stages ",
  FontWeight->"Bold"],
 "will include multi-criteria mixtures of simultaneous and sequential games, \
as well as a lot of applied problems from all the human activity."
}], "Item",
 CellChangeTimes->{{3.7402519650228195`*^9, 
  3.7402520325657654`*^9}},ExpressionUUID->"98465174-164a-40b7-bbc5-\
b256703aa04f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Background Info Links/References", "Subsubsection",
 CellChangeTimes->{
  3.736182238022826*^9},ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-\
1058844be4dd"],

Cell[TextData[{
 "Theory of Games has an impressive development during the last 70 years both \
as a domain of applied mathematics and a part of various important domains of \
human activity such as: operations research, economics, techniques, social \
and political sciences, biology, computer science etc. From their essence as \
a theory of mathematical models of interactive decision making, game theory \
includes both various mathematical models and solution notions. There are no \
general and efficient methods to solve mathematical models of strategic game \
theory.\n\nIn this project we intend to initiate a game theory Wolfram \
Language package. As a starting point for such package, we intend to \
construct software for solving poly-matrix mixed strategy games. It\
\[CloseCurlyQuote]s important to remark that from computational complexity \
point of view such games are NP-hard. We intend to use the method of \
intersection of graphs of best response mappings as a method for solving \
poly-matrix mixed strategy games.  The method is exposed in my recent \
monograph ",
 StyleBox["\[OpenCurlyDoubleQuote]",
  FontWeight->"Bold"],
 StyleBox[ButtonBox["Pareto-Nash-Stackelberg Game and Control Theory\
\[CloseCurlyDoubleQuote], Springer International Publishing, 2018, XXI + 343 \
pp",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.springer.com/gp/book/9783319751504"], None},
  ButtonNote->"https://www.springer.com/gp/book/9783319751504"],
  FontWeight->"Bold"],
 ". Some particular important problems which allow a graphical representation \
are already solved in the Wolfram language. So, we intend to approach the \
general case.\n\nIt\[CloseCurlyQuote]s important to mention that there is no \
sufficiently good software to solve game theory problems at the moment. So, \
our intentions are with many expectations. We hope that advanced Wolfram \
Technologies and very qualified WRI instructors will permit us to start a \
successful story of a new domain of application of the Wolfram Language and \
Mathematica system, but, simultaneously, a new story of an efficient and \
successful game theory software."
}], "Text",
 CellChangeTimes->{
  3.740252124710312*^9, {3.74025246558105*^9, 
   3.7402524670702004`*^9}},ExpressionUUID->"7209d19a-3e88-45d7-89a4-\
a0554079a4b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 CellChangeTimes->{
  3.73618224410275*^9},ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell["Provide keywords as items", "Text",
 CellChangeTimes->{{3.70811356171093*^9, 3.7081135645971746`*^9}, {
  3.7081136127408867`*^9, 
  3.708113615106327*^9}},ExpressionUUID->"a5e5e177-980c-46c4-8f4b-\
7804400a13ff"],

Cell[CellGroupData[{

Cell["<game theory >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963544862823`*^9}, {
  3.708113540381196*^9, 3.708113546129714*^9}, {3.7402521650762973`*^9, 
  3.740252174373325*^9}},ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-\
b6a38b6de7d0"],

Cell["< strategic game >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 
  3.7402521849547*^9}},ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"],

Cell["< player >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522367493787`*^9}},ExpressionUUID->"5356ac12-45aa-4fe6-b799-\
c61746f80e7d"],

Cell["< strategy >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522473925734`*^9}, {3.740252308455394*^9, 
  3.740252308455394*^9}},ExpressionUUID->"5e53ebe5-5520-4056-9b71-\
e398227810d0"],

Cell["< pure strategy >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522473925734`*^9}, {3.740252309638486*^9, 
  3.7402523162899857`*^9}},ExpressionUUID->"9b77c858-a89e-47c2-9eea-\
0666405fa21b"],

Cell["< mixed strategy >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522473925734`*^9}, {3.740252309638486*^9, 
  3.7402523207130165`*^9}},ExpressionUUID->"f11f8d28-8ee5-496c-8123-\
949bb593237e"],

Cell["< payoff >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522572984657`*^9}},ExpressionUUID->"39158769-db71-4472-8d82-\
42984a31a0fc"],

Cell["< poly-matrix game >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402522907387433`*^9}},ExpressionUUID->"f9f93c61-6169-4b94-bcb8-\
dcce7c0c6f56"],

Cell["< multi-matrix game >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.7402521984036098`*^9}, {3.740252234203317*^9, 
  3.7402523016092873`*^9}},ExpressionUUID->"29fd1f3c-97ec-4304-9264-\
0339836f305d"],

Cell["< criteria >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 
  3.7402521984036098`*^9}},ExpressionUUID->"6504f667-0713-4c3f-a375-\
7ab81e767b7b"],

Cell["< solution  concept >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.74025222405938*^9}, {3.7402523338489275`*^9, 
  3.740252342229128*^9}},ExpressionUUID->"24835d94-b14b-435e-afb2-\
7a60ab48bf3f"],

Cell["< Nash equilibrium >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.74025222405938*^9}, {3.7402523338489275`*^9, 
  3.7402523585137644`*^9}},ExpressionUUID->"74cb7ce7-20a7-442a-a3d8-\
cb8196c1d7c8"],

Cell["< MaxMin solution  >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.74025222405938*^9}, {3.7402523338489275`*^9, 
  3.740252377433815*^9}},ExpressionUUID->"67c4be92-cdbb-44e5-80fa-\
e5acd3388517"],

Cell["< Stackelberg equilibrium >", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740252177817284*^9, 3.74025222405938*^9}, {3.7402523338489275`*^9, 
  3.7402523965954337`*^9}},ExpressionUUID->"aec0f23f-ba04-4f91-96b1-\
de48cb3d2b66"]
}, Open  ]]
}, Open  ]],

Cell["Other information", "Subsubsection",
 CellChangeTimes->{{3.7361822750600033`*^9, 
  3.7361822822022877`*^9}},ExpressionUUID->"5f589531-3a9b-47cd-a487-\
fcf2f80aa83f"]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{812, 709},
WindowMargins->{{Automatic, 182}, {Automatic, 35}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
PrintingCopies->1,
PrintingPageRange->{1, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{54, 54}, {72, 72}}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[400, 13, 228, 5, 51, "TemplateInstructions",ExpressionUUID->"493d3bc0-cd44-49ab-b797-dcb9ccb49ecc",
   CellTags->"LastModified"]},
 "AuthorInfo"->{
  Cell[653, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "PosterContent"->{
  Cell[1967, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[102881, 1782, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[183365, 3854, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 391334, 9308},
 {"AuthorInfo", 391489, 9311},
 {"PosterContent", 391647, 9314},
 {"PresentationContent", 391815, 9317},
 {"ProjectNotes", 391986, 9320}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 228, 5, 51, "TemplateInstructions",ExpressionUUID->"493d3bc0-cd44-49ab-b797-dcb9ccb49ecc",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[653, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[874, 29, 345, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1222, 39, 341, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1566, 49, 364, 8, 47, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1967, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[2204, 69, 400, 8, 49, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2607, 79, 1439, 24, 157, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[4049, 105, 331, 8, 58, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[4383, 115, 92472, 1525, 176, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[96858, 1642, 1879, 36, 135, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[98740, 1680, 1930, 38, 179, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[100673, 1720, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[100775, 1723, 2069, 54, 37, "TemplateDivider",ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-c12593f67d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102881, 1782, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[103136, 1790, 1395, 29, 86, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[104556, 1823, 360, 6, 44, "TemplateEditableHeader",ExpressionUUID->"d071ce64-acbc-43ae-b7f0-c17c69d05e3e"],
Cell[104919, 1831, 363, 8, 79, "TemplateEditableContent",ExpressionUUID->"8c746bec-c005-4af8-addc-0e2edbbcfd33"],
Cell[105285, 1841, 279, 6, 57, "TemplateEditableContent",ExpressionUUID->"52354b08-8840-4bcd-908b-8fec4f322c18"],
Cell[CellGroupData[{
Cell[105589, 1851, 1053, 32, 111, "TemplateEditableInput",ExpressionUUID->"3713dfaf-34f1-464f-8501-63d758a1d9a3"],
Cell[106645, 1885, 1443, 40, 65, "Output",ExpressionUUID->"544bb3c4-470e-4187-85ff-06bdaf70a4fc"]
}, Open  ]],
Cell[108103, 1928, 313, 6, 57, "TemplateEditableContent",ExpressionUUID->"f047eb35-347d-4f7a-b4fb-3d89c1936c30"],
Cell[108419, 1936, 1899, 47, 88, "TemplateEditableContent",ExpressionUUID->"65ff7cce-7acc-4056-b8f7-440fd358ce74"],
Cell[110321, 1985, 316, 6, 57, "TemplateEditableContent",ExpressionUUID->"ddb3653c-9a1a-495b-bc8f-a964bc51f07f"],
Cell[110640, 1993, 2436, 59, 108, "TemplateEditableContent",ExpressionUUID->"38d71370-37a2-43ff-b044-18151924a642"],
Cell[113079, 2054, 270, 6, 39, "CodeText",ExpressionUUID->"88981867-650c-42d0-8841-7b6cc5815daf"],
Cell[113352, 2062, 9481, 275, 302, "TemplateEditableContent",ExpressionUUID->"70df1d5f-6427-45dc-95b4-66acd2ed69fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122870, 2342, 328, 6, 44, "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],
Cell[123201, 2350, 449, 10, 57, "TemplateEditableContent",ExpressionUUID->"d21a145f-c3c1-4df6-8bea-c67ea8fcb0f4"],
Cell[123653, 2362, 230, 5, 39, "CodeText",ExpressionUUID->"3b501bf8-19eb-4cbb-9490-405b1c1f7e6c"],
Cell[CellGroupData[{
Cell[123908, 2371, 860, 27, 111, "TemplateEditableInput",ExpressionUUID->"097a7bc4-f7aa-49cf-9b89-131c3c12d0a6"],
Cell[124771, 2400, 1377, 38, 48, "Output",ExpressionUUID->"541590da-0111-401a-80b0-38d1972d3ebe"]
}, Open  ]],
Cell[126163, 2441, 736, 15, 53, "TemplateEditableContent",ExpressionUUID->"fe13a970-665e-4f73-8b99-08b097990b95"],
Cell[126902, 2458, 53292, 1312, 484, "TemplateEditableInput",ExpressionUUID->"8b164e22-160f-4cce-92da-f328c0de4c0f"],
Cell[180197, 3772, 3119, 76, 37, "TemplateDivider",ExpressionUUID->"01c4256e-42d0-42b4-b6a6-4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183365, 3854, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[CellGroupData[{
Cell[183621, 3863, 151, 3, 44, "Subsubsection",ExpressionUUID->"c1b785be-a60a-40fe-b1f1-2d83590b38cd"],
Cell[183775, 3868, 918, 24, 100, "Text",ExpressionUUID->"a2115403-bef9-4fb0-b35e-e7e1f428f635"],
Cell[184696, 3894, 282, 4, 37, "CodeText",ExpressionUUID->"96059e12-4c14-4588-a4da-fd887e2c0e99"],
Cell[184981, 3900, 353, 10, 28, "Input",ExpressionUUID->"612eb437-fd71-4282-811c-950c1d2318a6"],
Cell[185337, 3912, 371, 10, 28, "Input",ExpressionUUID->"3606dee2-7937-46c8-add1-0160821d8228"],
Cell[185711, 3924, 413, 10, 28, "Input",ExpressionUUID->"d8bd525e-68f6-468a-960a-9ea6c5e264a5"],
Cell[186127, 3936, 478, 12, 56, "Text",ExpressionUUID->"97d18cbf-9e89-4f3e-8755-da834ab01857"],
Cell[186608, 3950, 223, 5, 28, "Input",ExpressionUUID->"29d08eaa-f75c-4dbc-a832-1cc06613bba8"],
Cell[186834, 3957, 211, 5, 28, "Input",ExpressionUUID->"ef52f52d-dce3-4b8c-81b2-cfe89091af82"],
Cell[187048, 3964, 232, 6, 28, "Input",ExpressionUUID->"024aaeef-4985-4c96-9f9e-85c7954bb8af"],
Cell[187283, 3972, 231, 6, 34, "Text",ExpressionUUID->"461b1cc8-fe96-4cf2-94dd-3dd4841fcb81"],
Cell[187517, 3980, 150, 3, 28, "Input",ExpressionUUID->"9ae59ab1-9d50-41d4-a7ad-82d22d6fa495"],
Cell[187670, 3985, 306, 8, 34, "Text",ExpressionUUID->"1da16e61-3f0c-4fd4-8a35-be33d089fbb8"],
Cell[187979, 3995, 247, 6, 28, "Input",ExpressionUUID->"a3a81307-6d73-47c5-8d5b-d4e00087ac5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188263, 4006, 131, 3, 44, "Subsubsection",ExpressionUUID->"6ebeefbd-4857-42fb-a308-27aaa279c47f"],
Cell[188397, 4011, 158, 3, 34, "Text",ExpressionUUID->"14e3781a-a52e-4548-bf74-c0aba980dad1"],
Cell[188558, 4016, 481, 11, 31, "Item",ExpressionUUID->"d164cdc3-c8cc-4779-b201-e2e8541cd2b4"],
Cell[189042, 4029, 1680, 44, 267, "Code",ExpressionUUID->"8a357d25-a473-4c3d-8902-c921d7852b23"],
Cell[190725, 4075, 1075, 30, 100, "Text",ExpressionUUID->"0421fcf6-3ae2-4443-a29c-68e68af0a29f"],
Cell[191803, 4107, 459, 8, 78, "Text",ExpressionUUID->"0178c1c3-fa03-4b81-a617-eef69ed88918"],
Cell[192265, 4117, 4973, 122, 339, "Code",ExpressionUUID->"63234d39-6f23-4a76-8c59-cb0ae23c0f8f"],
Cell[197241, 4241, 288, 9, 34, "Text",ExpressionUUID->"87420e1e-0c73-4c4d-8095-155423d90066"],
Cell[197532, 4252, 4541, 105, 483, "Code",ExpressionUUID->"8d24ac87-06a9-42b5-860e-18c3d12ce091"],
Cell[202076, 4359, 305, 7, 56, "Text",ExpressionUUID->"7324193c-b499-46cb-bc40-55644f7877da"],
Cell[202384, 4368, 4541, 105, 483, "Code",ExpressionUUID->"6c924052-d09b-47fe-b02c-d31a9300b145"],
Cell[206928, 4475, 222, 5, 34, "Text",ExpressionUUID->"c883db96-e0d9-43e9-a01e-30f86ef6bca4"],
Cell[207153, 4482, 538, 10, 56, "Text",ExpressionUUID->"93af7db0-0821-4c61-9ca9-cfb45af936a8"],
Cell[207694, 4494, 249, 6, 34, "Text",ExpressionUUID->"98ff923b-70ce-4aaa-8c1a-32d3a74203b7"],
Cell[207946, 4502, 406, 10, 56, "Text",ExpressionUUID->"75af82f4-c06e-44bd-a5f7-60f2e974dca0"],
Cell[208355, 4514, 624, 11, 34, "Text",ExpressionUUID->"3651f34b-1363-479f-bcdc-f96d7a5b9edd"],
Cell[208982, 4527, 98997, 2676, 2424, "Code",ExpressionUUID->"3b8ed1c1-9cfc-46e1-80d7-96a5c0dc3638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308016, 7208, 157, 3, 44, "Subsubsection",ExpressionUUID->"ba68b18e-0118-4694-9cc8-e616df451654"],
Cell[308176, 7213, 180, 3, 34, "Text",ExpressionUUID->"7ef03476-6e3e-483c-bf7b-8f94b881d7e6"],
Cell[308359, 7218, 1902, 44, 40, "Text",ExpressionUUID->"64c39778-04ea-4de1-8ff1-8b546194528e"],
Cell[CellGroupData[{
Cell[310286, 7266, 834, 23, 30, "ItemParagraph",ExpressionUUID->"e2ca39ef-fd5b-421d-b94d-048b37794fd8"],
Cell[311123, 7291, 1102, 29, 33, "ItemParagraph",ExpressionUUID->"563ecde4-0e45-4374-9363-6bf4fb13952c"],
Cell[312228, 7322, 869, 27, 33, "ItemParagraph",ExpressionUUID->"c3fffcc9-be7c-4620-be3f-f6c437eff14c"],
Cell[313100, 7351, 1946, 51, 43, "ItemParagraph",ExpressionUUID->"01d31c09-428d-4d78-8c4e-1a2c3d7c6108"]
}, Open  ]],
Cell[315061, 7405, 217, 5, 34, "Text",ExpressionUUID->"1abdcdc4-ccb6-4a48-bc89-940db2f67b27"],
Cell[315281, 7412, 304, 4, 35, "Text",ExpressionUUID->"7af03624-cb57-421a-a942-34e03cf9ffba"],
Cell[CellGroupData[{
Cell[315610, 7420, 493, 14, 25, "ItemParagraph",ExpressionUUID->"46991d30-b0f8-45dc-bfd3-1aca2097b0d6"],
Cell[316106, 7436, 492, 14, 25, "ItemParagraph",ExpressionUUID->"5cc8b883-7233-420c-8f2a-ec8088b7788c"],
Cell[316601, 7452, 169, 2, 25, "ItemParagraph",ExpressionUUID->"a4cf66ae-404a-4151-a271-6ebd011ce86a"],
Cell[316773, 7456, 690, 19, 25, "ItemParagraph",ExpressionUUID->"251a9dbf-b75d-4207-80d7-50354e0af0de"]
}, Open  ]],
Cell[317478, 7478, 315, 7, 34, "Text",ExpressionUUID->"c8a08339-13ca-4864-a065-4db79d00263e"],
Cell[317796, 7487, 247, 8, 34, "Text",ExpressionUUID->"e13d4ad4-899d-4b86-b129-94b8cfaf9804"],
Cell[318046, 7497, 3210, 83, 44, "Text",ExpressionUUID->"f386aeb3-fedf-40d5-998a-05515206b99c"],
Cell[321259, 7582, 385, 7, 56, "Text",ExpressionUUID->"02f5a096-5f7d-4828-9329-fb95145125f5"],
Cell[321647, 7591, 277, 6, 34, "Text",ExpressionUUID->"f9e34660-a887-4db9-94d1-1512990746cc"],
Cell[321927, 7599, 538, 10, 56, "Text",ExpressionUUID->"25701866-373c-4bad-b34d-fd6d22449c11"],
Cell[322468, 7611, 610, 11, 56, "Text",ExpressionUUID->"b6428e30-a487-4467-9fb8-0b73d0499d4f"],
Cell[323081, 7624, 624, 11, 34, "Text",ExpressionUUID->"332cda73-fee5-402f-a880-1b16ef1a5e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323742, 7640, 148, 3, 44, "Subsubsection",ExpressionUUID->"405e0fe7-2022-4d50-b275-5f85c6659f37"],
Cell[323893, 7645, 645, 11, 122, "Text",ExpressionUUID->"484b8b87-d20a-4ec5-ac39-c04eca1feb7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324575, 7661, 169, 3, 44, "Subsubsection",ExpressionUUID->"aa59b7ca-7848-48f1-96cf-6286c1fabb09"],
Cell[324747, 7666, 53097, 1307, 459, "Input",ExpressionUUID->"02a94c9b-54f0-4799-97e1-5c3dc97fca9f"]
}, Open  ]],
Cell[377859, 8976, 156, 3, 44, "Subsubsection",ExpressionUUID->"8d03133e-d036-4673-985c-415dd5ec88bb"],
Cell[CellGroupData[{
Cell[378040, 8983, 168, 3, 36, "Subsubsection",ExpressionUUID->"9afe7952-52cb-49e5-812a-edf95df8c363"],
Cell[378211, 8988, 231, 6, 34, "Text",ExpressionUUID->"3019718f-4bf1-4a35-8b90-79be52a501e4"],
Cell[CellGroupData[{
Cell[378467, 8998, 368, 9, 51, "Item",ExpressionUUID->"7448b2dc-3e17-4354-a5b3-c5d613d3e3b5"],
Cell[378838, 9009, 361, 9, 51, "Item",ExpressionUUID->"978c167d-453e-43cd-b72b-a5c8bb0d256d"],
Cell[379202, 9020, 279, 8, 31, "Item",ExpressionUUID->"c048a0fa-0afb-478a-b77c-cdafbc93c3b6"],
Cell[379484, 9030, 275, 8, 31, "Item",ExpressionUUID->"b20cf11f-168c-46bf-a517-e901ba60c61b"],
Cell[379762, 9040, 352, 8, 51, "Item",ExpressionUUID->"98465174-164a-40b7-bbc5-b256703aa04f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[380163, 9054, 159, 3, 44, "Subsubsection",ExpressionUUID->"19b709dc-5a9b-4a0e-8d93-1058844be4dd"],
Cell[380325, 9059, 2314, 39, 474, "Text",ExpressionUUID->"7209d19a-3e88-45d7-89a4-a0554079a4b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382676, 9103, 132, 2, 44, "Subsubsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[382811, 9107, 219, 4, 34, "Text",ExpressionUUID->"a5e5e177-980c-46c4-8f4b-7804400a13ff"],
Cell[CellGroupData[{
Cell[383055, 9115, 255, 4, 31, "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],
Cell[383313, 9121, 207, 3, 31, "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"],
Cell[383523, 9126, 253, 4, 31, "Item",ExpressionUUID->"5356ac12-45aa-4fe6-b799-c61746f80e7d"],
Cell[383779, 9132, 304, 5, 31, "Item",ExpressionUUID->"5e53ebe5-5520-4056-9b71-e398227810d0"],
Cell[384086, 9139, 311, 5, 31, "Item",ExpressionUUID->"9b77c858-a89e-47c2-9eea-0666405fa21b"],
Cell[384400, 9146, 312, 5, 31, "Item",ExpressionUUID->"f11f8d28-8ee5-496c-8123-949bb593237e"],
Cell[384715, 9153, 253, 4, 31, "Item",ExpressionUUID->"39158769-db71-4472-8d82-42984a31a0fc"],
Cell[384971, 9159, 263, 4, 31, "Item",ExpressionUUID->"f9f93c61-6169-4b94-bcb8-dcce7c0c6f56"],
Cell[385237, 9165, 264, 4, 31, "Item",ExpressionUUID->"29fd1f3c-97ec-4304-9264-0339836f305d"],
Cell[385504, 9171, 207, 4, 31, "Item",ExpressionUUID->"6504f667-0713-4c3f-a375-7ab81e767b7b"],
Cell[385714, 9177, 261, 4, 31, "Item",ExpressionUUID->"24835d94-b14b-435e-afb2-7a60ab48bf3f"],
Cell[385978, 9183, 262, 4, 31, "Item",ExpressionUUID->"74cb7ce7-20a7-442a-a3d8-cb8196c1d7c8"],
Cell[386243, 9189, 260, 4, 31, "Item",ExpressionUUID->"67c4be92-cdbb-44e5-80fa-e5acd3388517"],
Cell[386506, 9195, 269, 4, 31, "Item",ExpressionUUID->"aec0f23f-ba04-4f91-96b1-de48cb3d2b66"]
}, Open  ]]
}, Open  ]],
Cell[386802, 9203, 172, 3, 44, "Subsubsection",ExpressionUUID->"5f589531-3a9b-47cd-a487-fcf2f80aa83f"]
}, Open  ]]
}
]
*)

